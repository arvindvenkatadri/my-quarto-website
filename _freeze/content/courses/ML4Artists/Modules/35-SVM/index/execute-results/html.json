{
  "hash": "e81aaee39ec648f7c7f6cc0d4be1ecc6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Classification using Support Vector Machines\"\ndate: 21/April/2025\ndate-modified: \"2025-07-17\"\norder: 35\nabstract: We will look at the basic models for Classification of Data\ncaegories:\n  - Machine Learning\n  - Orange Data Mining\n\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n\n## Introduction\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npenguins %>% gf_point(body_mass_g ~ flipper_length_mm, colour = ~species)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/penguins-classification-1.png){width=2100}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(p5)\nlibrary(tibble)\n\n# Create drawings from data frames\n\nsquares <- data_frame(\n  x = c(100, 100, 200, 200),\n  y = c(50, 150, 50, 150),\n  w = rep(40, 4),\n  h = rep(40, 4)\n)\n\nsquares %>%\n  p5() %>%\n  createCanvas(300, 200) %>%\n  background(\"#002d72\") %>%\n  rect()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"p5-8722992850\" style=\"width:100%;height:433px;\" class=\"p5 html-widget\"></div>\n<script type=\"application/json\" data-for=\"p5-8722992850\">{\"x\":{\"section\":\"sketch\",\"pre\":\";\",\"setup\":\"p.setup = function() {\\np.createCanvas(300,200,null);\\np.background('#002d72');\\n};\",\"between\":\";\",\"draw\":\"p.draw = function() {\\np.rect(100,50,40,40);\\np.rect(100,150,40,40);\\np.rect(200,50,40,40);\\np.rect(200,150,40,40);\\n};\",\"post\":\";\",\"data\":{\"x\":[100,100,200,200],\"y\":[50,150,50,150],\"w\":[40,40,40,40],\"h\":[40,40,40,40]},\"fn\":\"zruuaitexv\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Draw complex shapes\n\np5() %>%\n  createCanvas(200, 200) %>%\n  background(\"#DCDCDC\") %>%\n  arc(50, 55, 50, 50, 0, ~HALF_PI) %>%\n  noFill() %>%\n  arc(50, 55, 60, 60, ~HALF_PI, ~PI) %>%\n  arc(50, 55, 70, 70, ~PI, ~ PI + QUARTER_PI) %>%\n  arc(50, 55, 80, 80, ~ PI + QUARTER_PI, ~TWO_PI)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"p5-2149563630\" style=\"width:100%;height:650px;\" class=\"p5 html-widget\"></div>\n<script type=\"application/json\" data-for=\"p5-2149563630\">{\"x\":{\"section\":\"sketch\",\"pre\":\";\",\"setup\":\"p.setup = function() {\\np.createCanvas(200,200,null);\\np.background('#DCDCDC');\\n};\",\"between\":\";\",\"draw\":\"p.draw = function() {\\np.arc(50,55,50,50,0,p.HALF_PI,null);\\np.noFill();\\np.arc(50,55,60,60,p.HALF_PI,p.PI,null);\\np.arc(50,55,70,70,p.PI,p.PI+p.QUARTER_PI,null);\\np.arc(50,55,80,80,p.PI+p.QUARTER_PI,p.TWO_PI,null);\\n};\",\"post\":\";\",\"data\":null,\"fn\":\"kfypqnfmiv\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a sketch piece-by-piece\n\nsquares %>%\n  draw() %>%\n  fill(\"#808080\") %>%\n  rect() %>%\n  sketch(\n    draw = .,\n    setup = setup() %>% createCanvas(300, 200)\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"p5 html-widget html-fill-item\" id=\"p5-7936346436\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"p5-7936346436\">{\"x\":{\"section\":\"sketch\",\"pre\":\";\",\"setup\":\"p.setup = function() {\\np.createCanvas(300,200,null);\\n};\",\"between\":\";\",\"draw\":\"p.draw = function() {\\np.fill('#808080');\\np.rect(100,50,40,40);\\np.rect(100,150,40,40);\\np.rect(200,50,40,40);\\np.rect(200,150,40,40);\\n};\",\"post\":\";\",\"data\":null,\"fn\":\"ypnvecyyfz\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create interactions\n\ndraw() %>%\n  background(\"#F4F8FC\") %>%\n  line(~mouseX, 0, ~mouseX, 200) %>%\n  sketch(\n    draw = .,\n    setup = setup() %>% createCanvas(300, 200)\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"p5 html-widget html-fill-item\" id=\"p5-8688313368\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"p5-8688313368\">{\"x\":{\"section\":\"sketch\",\"pre\":\";\",\"setup\":\"p.setup = function() {\\np.createCanvas(300,200,null);\\n};\",\"between\":\";\",\"draw\":\"p.draw = function() {\\np.background('#F4F8FC');\\np.line(p.mouseX,0,p.mouseX,200);\\n};\",\"post\":\";\",\"data\":null,\"fn\":\"mjfzhhnkkn\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let users draw\n\np5() %>%\n  createCanvas(400, 300) %>%\n  background(\"#F4F8FC\") %>%\n  ellipse(~mouseX, ~mouseY, 30, 30)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"p5-3284322926\" style=\"width:100%;height:487px;\" class=\"p5 html-widget\"></div>\n<script type=\"application/json\" data-for=\"p5-3284322926\">{\"x\":{\"section\":\"sketch\",\"pre\":\";\",\"setup\":\"p.setup = function() {\\np.createCanvas(400,300,null);\\np.background('#F4F8FC');\\n};\",\"between\":\";\",\"draw\":\"p.draw = function() {\\np.ellipse(p.mouseX,p.mouseY,30,30);\\n};\",\"post\":\";\",\"data\":null,\"fn\":\"pylwvkdewo\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# Click to change the brush\n\nsetup_ <- setup() %>%\n  createCanvas(640, 380, ~WEBGL)\ndraw_ <- draw() %>%\n  js(\"\n      if (mouseIsPressed) {\n        fill(0);\n      } else {\n        fill(255);\n      }\n  \") %>%\n  ellipse(~mouseX, ~mouseY, 80, 80)\n\nsketch(setup = setup_, draw = draw_)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"p5 html-widget html-fill-item\" id=\"p5-3230560343\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"p5-3230560343\">{\"x\":{\"section\":\"sketch\",\"pre\":\";\",\"setup\":\"p.setup = function() {\\np.createCanvas(640,380,p.WEBGL);\\n};\",\"between\":\";\",\"draw\":\"p.draw = function() {\\n\\n      if (p.mouseIsPressed) {\\n        p.fill(0);\\n      } else {\\n        p.fill(255);\\n      }\\n  \\np.ellipse(p.mouseX,p.mouseY,80,80);\\n};\",\"post\":\";\",\"data\":null,\"fn\":\"pbvmdstxjr\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## What is Classification, again?\nClassification is a Machine Learning method that predicts the **class** or **level** of a target Qualitative variable, based on several Qualitative and Quantitative predictors. \n\n## How does one Classify? \n\n\n## What is a Hyperplane?\n\nConsider a dataset that contains a pair of Quantitative **predictor variables** and a **target** Qualitative variable. \n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"x1\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"x2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"y\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"18.381315\",\"2\":\"18.176596\",\"3\":\"-1\"},{\"1\":\"18.804433\",\"2\":\"3.635493\",\"3\":\"-1\"},{\"1\":\"6.436651\",\"2\":\"19.788943\",\"3\":\"1\"},{\"1\":\"16.778505\",\"2\":\"18.986696\",\"3\":\"1\"},{\"1\":\"13.193165\",\"2\":\"2.566314\",\"3\":\"-1\"},{\"1\":\"10.862823\",\"2\":\"10.770024\",\"3\":\"-1\"},{\"1\":\"14.995178\",\"2\":\"8.413866\",\"3\":\"-1\"},{\"1\":\"3.558665\",\"2\":\"18.209024\",\"3\":\"1\"},{\"1\":\"13.482854\",\"2\":\"9.492423\",\"3\":\"-1\"},{\"1\":\"14.396231\",\"2\":\"16.884081\",\"3\":\"1\"},{\"1\":\"9.697094\",\"2\":\"15.014317\",\"3\":\"1\"},{\"1\":\"14.663133\",\"2\":\"16.410048\",\"3\":\"1\"},{\"1\":\"18.758773\",\"2\":\"8.374057\",\"3\":\"-1\"},{\"1\":\"5.853148\",\"2\":\"14.018225\",\"3\":\"1\"},{\"1\":\"9.783564\",\"2\":\"1.075018\",\"3\":\"-1\"},{\"1\":\"18.860276\",\"2\":\"16.825406\",\"3\":\"-1\"},{\"1\":\"19.586302\",\"2\":\"1.139349\",\"3\":\"-1\"},{\"1\":\"3.232260\",\"2\":\"4.945520\",\"3\":\"1\"},{\"1\":\"10.024945\",\"2\":\"18.225427\",\"3\":\"1\"},{\"1\":\"11.646322\",\"2\":\"12.623794\",\"3\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/using-dot-product-1.png){width=2100}\n:::\n:::\n\n\n\n\n\n\n![Hyperplane](../../../../materials/images/SVM-1.png){#fig-hyperplane-SVM}\n\n\n## References\n\n1.  <https://towardsdatascience.com/data-science-made-easy-data-modeling-and-prediction-using-orange-f451f17061fa>\n2.  The beauty of Random Forests:\n    <https://orangedatamining.com/blog/2016/12/22/the-beauty-of-random-forest/>\n3.  Pythagorean Trees for Random Forests:\n    <https://orangedatamining.com/blog/2016/07/29/pythagorean-trees-and-forests/>\n4.  *data.tree* sample applications, Christoph Glur, 2020-07-31.\n    <https://cran.r-project.org/web/packages/data.tree/vignettes/applications.html>\n5.  <https://ryjohnson09.netlify.app/post/caret-and-tidymodels/>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../../../site_libs/p5-0.5.11/p5.min.js\"></script>\n<script src=\"../../../../../site_libs/p5-binding-0.0.0.9012/p5.js\"></script>\n<link href=\"../../../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<link href=\"../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}