{
  "hash": "676057c1213da3a9a3ea937d53789f4b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"wpf:survey\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> Surveys\nsubtitle: \"Extra Cheese with my 5-insect pizza, please!\"\nauthor: \"Arvind V.\"\ndate: 27/Dec/2022\ndate-modified: \"2025-07-17\"\nabstract: Surveys, Questions, and Responses\norder: 45\nimage: ../../../../../materials/images/rural-survey.jpg\ncategories:\n- Proportions\n- Likert Scale data\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\nwebr:\n  packages: ['readr', 'dplyr','mosaic', 'skimr', 'ggformula','GGally','kableExtra', 'vcd', 'vcdExtra', 'ggmosaic', 'resampledata', 'ggstats', 'labelled', 'ggpubr']\n---\n\n![Rural Survey](../../../../../materials/images/rural-survey.jpg){#fig-rural-survey}\n\n\n\n:::: {.pa4}\n::: {.athelas .ml0 .mt0 .pl4 .black-90 .bl .bw2 .b--blue}\n[\"It is not that we have so little time but that we lose so muchâ€¦The life we receive is not short but we make it so; we are not ill provided but use what we have wastefully.\"]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}\n\n[ --- Seneca]{.f6 .ttu .tracked .fs-normal}\n:::\n::::\n\n## {{< iconify noto-v1 package >}} Setting up R Packages {#sec-setting-up-r-packages}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vcd) # Michael Friendly's package, Visualizing Categorical Data\nlibrary(vcdExtra) # Categorical Data Sets\nlibrary(resampledata) # More datasets\n\nlibrary(ggstats) # Likert Scale Plots\nlibrary(labelled) # Creating Labelled Data for Likert Plots\nlibrary(sjPlot) # Another package for Likert Plots\n\n## Making Tables\nlibrary(kableExtra) # html styled tables\nlibrary(tinytable) # Elegant Tables for our data\nlibrary(tidyplots) # Easily Produced Publication-Ready Plots\nlibrary(tinyplot) # Plots with Base R\n#\nlibrary(mosaic) # Our trusted friend\nlibrary(skimr)\nlibrary(tidyverse)\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## {{< iconify icons8 idea >}} Inspiration\n\nTo be Found !!\n\n\n#### Plot Fonts and Theme\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(systemfonts)\nlibrary(showtext)\n## Clean the slate\nsystemfonts::clear_local_fonts()\nsystemfonts::clear_registry()\n##\nshowtext_opts(dpi = 96) # set DPI for showtext\nsysfonts::font_add(\n  family = \"Alegreya\",\n  regular = \"../../../../../../fonts/Alegreya-Regular.ttf\",\n  bold = \"../../../../../../fonts/Alegreya-Bold.ttf\",\n  italic = \"../../../../../../fonts/Alegreya-Italic.ttf\",\n  bolditalic = \"../../../../../../fonts/Alegreya-BoldItalic.ttf\"\n)\n\nsysfonts::font_add(\n  family = \"Roboto Condensed\",\n  regular = \"../../../../../../fonts/RobotoCondensed-Regular.ttf\",\n  bold = \"../../../../../../fonts/RobotoCondensed-Bold.ttf\",\n  italic = \"../../../../../../fonts/RobotoCondensed-Italic.ttf\",\n  bolditalic = \"../../../../../../fonts/RobotoCondensed-BoldItalic.ttf\"\n)\nshowtext_auto(enable = TRUE) # enable showtext\n##\ntheme_custom <- function() {\n  font <- \"Alegreya\" # assign font family up front\n\n  theme_classic(base_size = 14, base_family = font) %+replace% # replace elements we want to change\n\n    theme(\n      text = element_text(family = font), # set base font family\n\n      # text elements\n      plot.title = element_text( # title\n        family = font, # set font family\n        size = 24, # set font size\n        face = \"bold\", # bold typeface\n        hjust = 0, # left align\n        margin = margin(t = 5, r = 0, b = 5, l = 0)\n      ), # margin\n      plot.title.position = \"plot\",\n      plot.subtitle = element_text( # subtitle\n        family = font, # font family\n        size = 14, # font size\n        hjust = 0, # left align\n        margin = margin(t = 5, r = 0, b = 10, l = 0)\n      ), # margin\n\n      plot.caption = element_text( # caption\n        family = font, # font family\n        size = 9, # font size\n        hjust = 1\n      ), # right align\n\n      plot.caption.position = \"plot\", # right align\n\n      axis.title = element_text( # axis titles\n        family = \"Roboto Condensed\", # font family\n        size = 12\n      ), # font size\n\n      axis.text = element_text( # axis text\n        family = \"Roboto Condensed\", # font family\n        size = 9\n      ), # font size\n\n      axis.text.x = element_text( # margin for axis text\n        margin = margin(5, b = 10)\n      )\n\n      # since the legend often requires manual tweaking\n      # based on plot content, don't define it here\n    )\n}\n```\n:::\n\n\n\n::: {.cell}\n\n````{.cell-code  code-fold=\"true\"}\n```{{r}}\n#| cache: false\n#| code-fold: true\n## Set the theme\ntheme_set(new = theme_custom())\n\n## Use available fonts in ggplot text geoms too!\nupdate_geom_defaults(geom = \"text\", new = list(\n  family = \"Roboto Condensed\",\n  face = \"plain\",\n  size = 3.5,\n  color = \"#2b2b2b\"\n))\n```\n````\n:::\n\n\n\n## {{< iconify fe beginner >}} What graphs will we see today?\n\n| Variable #1 | Variable #2 | Chart Names |                    \"Chart Shape\"                   |\n|:-------------:|:--------------:|:------------------:|:--------------------:|\n|    Qual   |    Qual     |  Likert Plots | ![Bipolar Scale by Aenne Brielmann from <a href=\"https://thenounproject.com/browse/icons/term/bipolar-scale/\" target=\"_blank\" title=\"Bipolar Scale Icons\">Noun Project</a> (CC BY 3.0)](../../../../../materials/images/noun-bipolar-scale-139097.png) |\n\n## {{< iconify tabler variable >}} What kind of Data Variables will we choose?\n\n::: column-page-inset-right\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_btaj0naofa4krpat2isr(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_btaj0naofa4krpat2isr\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_btaj0naofa4krpat2isr');\n        // Find the row with data-row attribute matching i\n        var targetRow = table.querySelector(`tr [data-row=\"${i}\"]`).closest('tr');\n        var newRow = table.insertRow(targetRow.rowIndex);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        newCell.setAttribute(\"data-col\", \"0\");\n        newCell.setAttribute(\"data-row\", i - 1);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_btaj0naofa4krpat2isr(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_btaj0naofa4krpat2isr\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '1', j: 0 }, { i: '1', j: 1 }, { i: '1', j: 2 }, { i: '1', j: 3 }, { i: '1', j: 4 }, { i: '1', j: 5 },  ], css_id: 'tinytable_css_ggb3xsenbfat8q667amc',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 1 }, { i: '0', j: 2 }, { i: '0', j: 3 }, { i: '0', j: 4 }, { i: '0', j: 5 },  ], css_id: 'tinytable_css_ol4r7tny53xxj0e2evks',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_btaj0naofa4krpat2isr(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_ggb3xsenbfat8q667amc, .table th.tinytable_css_ggb3xsenbfat8q667amc { background-color: #ededed; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_ol4r7tny53xxj0e2evks, .table th.tinytable_css_ol4r7tny53xxj0e2evks { border-bottom: solid #d3d8dc 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-striped\" id=\"tinytable_btaj0naofa4krpat2isr\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">No</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">Pronoun</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">Answer</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">Variable/Scale</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">Example</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">What Operations?</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">3</td>\n                  <td data-row=\"1\" data-col=\"1\">How, What Kind, What Sort</td>\n                  <td data-row=\"1\" data-col=\"2\">A Manner / Method, Type or Attribute from a list, with list items in some \" order\" ( e.g. good, better, improved, best..)</td>\n                  <td data-row=\"1\" data-col=\"3\">Qualitative/Ordinal</td>\n                  <td data-row=\"1\" data-col=\"4\">Socioeconomic status (Low income, Middle income, High income),Education level (HighSchool, BS, MS, PhD),Satisfaction rating(Very much Dislike, Dislike, Neutral, Like, Very Much Like)</td>\n                  <td data-row=\"1\" data-col=\"5\">Median,Percentile</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n:::\n\n\n## {{< iconify mdi food-processor-outline >}} How do these Chart(s) Work?\n\nIn many business and design situations, we perform say *customer surveys* to get\n[Likert Scale](https://www.simplypsychology.org/likert-scale.html) data,\nwhere several respondents rate a product or a service on a scale of\n`Very much like`, `somewhat like`, `neutral`, `Dislike` and\n`Very much dislike,` for example. These are then plotted in a chart to get a distribution of opinions for each question in the survey. Some examples of Likert Scales are shown below.\n\n\n![Likert Scale Questionnaire Samples](../../../../../materials/images/likert-scales.png){#fig-likert-scales}\n\nAs seen, we can use Likert Scale based questionnaire for a variety of aspects in our survey instruments.\n\n\n## {{< iconify fluent likert-16-regular >}} Plots for Survey Data\n\nHow does this data look like, and how does one plot it? Let us consider a fictitious example, followed by a real world dataset.\n\n## {{< iconify grommet-icons test >}} Case Study-1: A fictitious app Survey dataset\n\n::: callout-note\n### A fictitious QuickEZ app\n\nWe are a start-up that has an app called **QuickEZ** for delivery of\ngroceries. We conduct a survey of 200 people at a local store, with the\nfollowing questions,\n\n1.  \"Have your heard of the QuickEZ app?\"\n2.  \"Do you use the QuickEZ app?\"\n3.  \"Do you find it easy to use the QuickEZ app?\"\n4.  \"Will you continue to use the QuickEZ app?\"\n\nwhere each questions is to be answered on a scale of : \"always\",\n\"often\", \"sometimes\",\"rarely\", \"never\".\n:::\n\nSuch data may look for example as follows:\n\n\n::: {.cell .column-body-outset-right layout=\"[40,-5,55]\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic-2 table table-striped table-hover table-responsive\" style=\"font-family: Cambria; width: auto !important; margin-left: auto; margin-right: auto; margin-left: auto; margin-right: auto;\">\n<caption>First 10 Responses</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> q1 </th>\n   <th style=\"text-align:left;\"> q2 </th>\n   <th style=\"text-align:left;\"> q3 </th>\n   <th style=\"text-align:left;\"> q4 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> rarely </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> never </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> often </td>\n   <td style=\"text-align:left;\"> rarely </td>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> rarely </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> never </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> often </td>\n   <td style=\"text-align:left;\"> always </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> rarely </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> rarely </td>\n   <td style=\"text-align:left;\"> rarely </td>\n   <td style=\"text-align:left;\"> rarely </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> often </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> never </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:left;\"> always </td>\n   <td style=\"text-align:left;\"> always </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [200 Ã— 4] (S3: tbl_df/tbl/data.frame)\n $ q1: Factor w/ 4 levels \"never\",\"rarely\",..: 1 1 3 1 4 2 4 3 4 4 ...\n  ..- attr(*, \"label\")= chr \"Have your heard of the QuickEZ app?\"\n $ q2: Factor w/ 4 levels \"never\",\"rarely\",..: 2 4 2 4 1 4 2 4 1 1 ...\n  ..- attr(*, \"label\")= chr \"Do you use the QuickEZ app?\"\n $ q3: Factor w/ 4 levels \"never\",\"rarely\",..: 4 4 1 4 3 4 2 4 4 4 ...\n  ..- attr(*, \"label\")= chr \"Do you find it easy to use the QuickEZ app?\"\n $ q4: Factor w/ 4 levels \"never\",\"rarely\",..: 4 1 2 1 4 4 2 1 4 4 ...\n  ..- attr(*, \"label\")= chr \"Will you continue to use the QuickEZ app?\"\n```\n\n\n:::\n:::\n\n\nThe columns here correspond to the 4 questions (q1-q4) and the rows\ncontain the 200 responses, which have been coded as (1:4). Such data is\nalso a form of *Categorical data* and we need to count and plot counts\nfor each of the survey questions. Such a plot is called a **Likert\nplot** and it looks like this:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=2100}\n:::\n:::\n\n\nBased on this chart, since it looks like about 40% the survey\nrespondents have not heard of our app, we need more publicity, and many do not find it easy to use ðŸ˜¿, so we have serious re-design and user\ntesting to do !! But at least those who have managed to get past the\nhurdles are stating they will continue to use the app, so it does the\njob, but we can make it easier to use.\n\n## {{< iconify grommet-icons test >}} Case Study-2: EUROFAM Survey dataset\n\nHere is another example of Likert data from the *healthcare industry*.\n\n`efc` is a German data set from a European study titled [**EUROFAM\nstudy**](https://doi.org/10.1093/geront/48.6.752), on *family care of\nolder people*. Following a common protocol, data were collected from\nnational samples of approximately 1,000 family carers (i.e. caregivers)\nper country and clustered into comparable subgroups to facilitate\ncross-national analysis. The *research questions* in [**this EUROFAM\nstudy**](https://doi.org/10.1093/geront/48.6.752) were:\n\n> 1.  To what extent do family carers of older people use support\n>     services or receive financial allowances across Europe? What kind\n>     of supports and allowances do they mainly use?\n>\n> 2.  What are the main difficulties carers experience accessing the\n>     services used? What prevents carers from accessing unused supports\n>     that they need? What causes them to stop using still-needed\n>     services?\n>\n> 3.  In order to improve support provision, what can be understood\n>     about the service characteristics considered crucial by carers,\n>     and how far are these needs met? and,\n>\n> 4.  Which channels or actors can provide the greatest help in\n>     underpinning future policy efforts to improve access to\n>     services/supports?\n\nWe will select the variables from the `efc` data set that related to\n*coping* (on part of care-givers) and plot their responses after\ninspecting them:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(efc, package = \"sjPlot\")\nglimpse(efc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 908\nColumns: 26\n$ c12hour  <dbl> 16, 148, 70, 168, 168, 16, 161, 110, 28, 40, 100, 25, 25, 24,â€¦\n$ e15relat <dbl> 2, 2, 1, 1, 2, 2, 1, 4, 2, 2, 1, 8, 2, 1, 2, 2, 1, 1, 2, 1, 2â€¦\n$ e16sex   <dbl> 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2â€¦\n$ e17age   <dbl> 83, 88, 82, 67, 84, 85, 74, 87, 79, 83, 68, 97, 80, 75, 82, 8â€¦\n$ e42dep   <dbl> 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 3, 3, 1, 3, 3, 4, 4â€¦\n$ c82cop1  <dbl> 3, 3, 2, 4, 3, 2, 4, 3, 3, 3, 3, 3, 3, 3, 2, 4, 3, 4, 3, 3, 3â€¦\n$ c83cop2  <dbl> 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 4, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2â€¦\n$ c84cop3  <dbl> 2, 3, 1, 3, 1, 3, 4, 2, 3, 1, 4, 3, 2, 4, 3, 1, 1, 1, 1, 4, 3â€¦\n$ c85cop4  <dbl> 2, 3, 4, 1, 2, 3, 1, 1, 2, 2, 4, 1, 2, 4, 3, 3, 2, 2, 2, 2, 2â€¦\n$ c86cop5  <dbl> 1, 4, 1, 1, 2, 3, 1, 1, 2, 1, 4, 3, 2, 1, 2, 3, 1, 1, 2, 1, 1â€¦\n$ c87cop6  <dbl> 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1â€¦\n$ c88cop7  <dbl> 2, 3, 1, 1, 1, 2, 4, 2, 3, 1, 4, 4, 2, 2, 1, 2, 2, 2, 3, 3, 1â€¦\n$ c89cop8  <dbl> 3, 2, 4, 2, 4, 1, 1, 3, 1, 1, 1, 3, 4, 4, 1, 1, 4, 3, 1, 2, 1â€¦\n$ c90cop9  <dbl> 3, 2, 3, 4, 4, 1, 4, 3, 3, 3, 1, 1, 4, 4, 1, 3, 4, 3, 4, 2, 3â€¦\n$ c160age  <dbl> 56, 54, 80, 69, 47, 56, 61, 67, 59, 49, 66, 47, 58, 75, 49, 5â€¦\n$ c161sex  <dbl> 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2â€¦\n$ c172code <dbl> 2, 2, 1, 2, 2, 2, 2, 2, NA, 2, 2, 2, 3, 1, 3, 2, 2, 2, 3, 3, â€¦\n$ c175empl <dbl> 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1â€¦\n$ barthtot <dbl> 75, 75, 35, 0, 25, 60, 5, 35, 15, 0, 25, 85, 15, 70, NA, 0, 9â€¦\n$ neg_c_7  <dbl> 12, 20, 11, 10, 12, 19, 15, 11, 15, 10, 28, 18, 13, 18, 16, 1â€¦\n$ pos_v_4  <dbl> 12, 11, 13, 15, 15, 9, 13, 14, 13, 13, 9, 8, 14, 14, 9, 14, 1â€¦\n$ quol_5   <dbl> 14, 10, 7, 12, 19, 8, 20, 20, 8, 15, 1, 19, 12, 8, 8, 6, 16, â€¦\n$ resttotn <dbl> 0, 4, 0, 2, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 3, 0, 1â€¦\n$ tot_sc_e <dbl> 4, 0, 1, 0, 1, 3, 0, 1, 2, 1, 1, 1, 3, 0, 3, 2, 2, 0, 1, 7, 1â€¦\n$ n4pstu   <dbl> 0, 0, 2, 3, 2, 2, 3, 1, 3, 3, 3, 1, 3, 1, 0, 0, 0, 2, 1, 2, 4â€¦\n$ nur_pst  <dbl> NA, NA, 2, 3, 2, 2, 3, 1, 3, 3, 3, 1, 3, 1, NA, NA, NA, 2, 1,â€¦\n```\n\n\n:::\n:::\n\n\n\n::: {.cell .column-body-outset-right layout-nrow=\"2\"}\n\n```{.r .cell-code}\nefc %>%\n  select(dplyr::contains(\"cop\")) %>%\n  head(20)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"c82cop1\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c83cop2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c84cop3\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c85cop4\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c86cop5\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c87cop6\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c88cop7\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c89cop8\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c90cop9\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"_rn_\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"3\",\"5\":\"4\",\"6\":\"1\",\"7\":\"3\",\"8\":\"2\",\"9\":\"2\",\"_rn_\":\"2\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"1\",\"4\":\"4\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"8\":\"4\",\"9\":\"3\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"3\",\"4\":\"1\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"8\":\"2\",\"9\":\"4\",\"_rn_\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"2\",\"6\":\"2\",\"7\":\"1\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"5\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"3\",\"4\":\"3\",\"5\":\"3\",\"6\":\"2\",\"7\":\"2\",\"8\":\"1\",\"9\":\"1\",\"_rn_\":\"6\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"4\",\"8\":\"1\",\"9\":\"4\",\"_rn_\":\"7\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"1\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"_rn_\":\"8\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"3\",\"4\":\"2\",\"5\":\"2\",\"6\":\"1\",\"7\":\"3\",\"8\":\"1\",\"9\":\"3\",\"_rn_\":\"9\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"8\":\"1\",\"9\":\"3\",\"_rn_\":\"10\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"4\",\"5\":\"4\",\"6\":\"4\",\"7\":\"4\",\"8\":\"1\",\"9\":\"1\",\"_rn_\":\"11\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\",\"5\":\"3\",\"6\":\"1\",\"7\":\"4\",\"8\":\"3\",\"9\":\"1\",\"_rn_\":\"12\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"2\",\"5\":\"2\",\"6\":\"1\",\"7\":\"2\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"13\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"14\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"3\",\"4\":\"3\",\"5\":\"2\",\"6\":\"2\",\"7\":\"1\",\"8\":\"1\",\"9\":\"1\",\"_rn_\":\"15\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"1\",\"4\":\"3\",\"5\":\"3\",\"6\":\"1\",\"7\":\"2\",\"8\":\"1\",\"9\":\"3\",\"_rn_\":\"16\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"17\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"_rn_\":\"18\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"2\",\"6\":\"1\",\"7\":\"3\",\"8\":\"1\",\"9\":\"4\",\"_rn_\":\"19\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\",\"5\":\"1\",\"6\":\"3\",\"7\":\"3\",\"8\":\"2\",\"9\":\"2\",\"_rn_\":\"20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n##\nefc %>%\n  select(dplyr::contains(\"cop\")) %>%\n  str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t908 obs. of  9 variables:\n $ c82cop1: num  3 3 2 4 3 2 4 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"do you feel you cope well as caregiver?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ c83cop2: num  2 3 2 1 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"do you find caregiving too demanding?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c84cop3: num  2 3 1 3 1 3 4 2 3 1 ...\n  ..- attr(*, \"label\")= chr \"does caregiving cause difficulties in your relationship with your friends?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c85cop4: num  2 3 4 1 2 3 1 1 2 2 ...\n  ..- attr(*, \"label\")= chr \"does caregiving have negative effect on your physical health?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c86cop5: num  1 4 1 1 2 3 1 1 2 1 ...\n  ..- attr(*, \"label\")= chr \"does caregiving cause difficulties in your relationship with your family?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c87cop6: num  1 1 1 1 2 2 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"does caregiving cause financial difficulties?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c88cop7: num  2 3 1 1 1 2 4 2 3 1 ...\n  ..- attr(*, \"label\")= chr \"do you feel trapped in your role as caregiver?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c89cop8: num  3 2 4 2 4 1 1 3 1 1 ...\n  ..- attr(*, \"label\")= chr \"do you feel supported by friends/neighbours?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ c90cop9: num  3 2 3 4 4 1 4 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"do you feel caregiving worthwhile?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n```\n\n\n:::\n:::\n\n\nThe `cop`ing related variables have responses on the Likert Scale\n`(1,2,3,4)` which correspond to `(never, sometimes, often, always)`,\n**and** each variable also has a `label` defining each variable. The\nlabels are actually ( and perhaps usually ) the *questions* in the\nsurvey.\n\nWe can plot this data using the `gglikert` function from package `ggstats`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nefc %>%\n  select(dplyr::contains(\"cop\")) %>%\n  gglikert(labels_size = 3, width = 0.75) +\n  labs(title = \"Caregiver Survey from EUROFAM\") +\n  scale_fill_brewer(\n    name = \"Responses\",\n    labels = c(\"never\", \"sometimes\", \"often\", \"always\"),\n    palette = \"Set3\", direction = -1\n  ) +\n  theme(legend.position = \"bottom\") + theme_custom()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=2100}\n:::\n:::\n\n\n\nMany questions here have strong *negative* responses. This may indicate\nthat policy and publicity related efforts may be required.\n\n\n## {{< iconify fluent-emoji label >}} Labelled Data\n\nNote how the y-axis has been populated with **Survey Questions**: this\nis an example of a *labelled dataset*, where not only do the variables\nhave *names* i.e. column names, but also have longish text **labels**\nthat add information to the data variables. The **data values** ( i.e\nscores) in the columns is also **labelled** as per the the Likert scale\n(`Like/Dislike/Strongly Dislike` OR `never/sometimes/often/always`) etc.\nThese **Likert scores** are usually a set of contiguous integers.\n\n::: callout-note\n## Variable Labels and Value Labels\n\n**Variable label** is human readable description of the variable. R\nsupports rather long variable names and these names can contain even\nspaces and punctuation but short variables names make coding easier.\nVariable label can give a nice, long description of variable. With this\ndescription it is easier to remember what those variable names refer\nto.\\\n\n**Value labels** are similar to variable labels, but value labels are\ndescriptions of the values a variable can take. Labeling values means we\ndon't have to remember if `1=Extremely poor` and `7=Excellent` or\nvice-versa. We can easily get dataset description and variables summary\nwith info function.\n:::\n\nLet us manually create one such dataset, since this is a common-enough\nsituation[^2] that we have survey data and then have to label the\nvariables and the values before plotting. We will use the R package `labelled` to label our data.[^1]. \n\nIt is also possible to label the tibble, the columns, and the values in similar fashion using the `sjlabelled` package[^3] and the `labelr` package[^4].\n\n[^1]: Introduction to `labelled`:<https://larmarange.github.io/labelled/articles/intro_labelled.html#using-labelled-with-dplyrmagrittr>\n\n[^2]: Piping Hot Data: Leveraging Labelled Data in R,\n    <https://www.pipinghotdata.com/posts/2020-12-23-leveraging-labelled-data-in-r/>\n\n[^3]: Label Support in\n    R:<https://cran.r-project.org/web/packages/sjlabelled/index.html>\n    \n[^4]: Using the `labelr` package: <https://cran.r-project.org/web/packages/labelr/vignettes/labelr-introduction.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n# ggplot2::theme_set(new = theme_classic(base_family = \"Roboto Condensed\")) # Set consistent graph theme\n\nvariable_labels <- c(\n  \"Do you practice Analytics?\",\n  \"Do you code in R?\",\n  \"Have you published your R Code?\",\n  \"Do you use Quarto as your Workflow in R?\",\n  \"Will you use R at Work?\"\n)\n##\nvalue_labels <- c(\"never\", \"sometimes\", \"often\", \"always\")\n##\nmy_survey_data <-\n  # Create toy survey data\n  # 200 responses to 5 questions\n  # responses on Likert Scale\n  # 1:4 = \"never\", \"sometimes\",\"often\",\"always\")\n\n  tibble(\n    q1 = mosaic::sample(value_labels,\n      replace = TRUE, size = 200,\n      prob = c(0.2, 0.2, 0.5, 0.1)\n    ),\n    q2 = mosaic::sample(value_labels,\n      replace = TRUE, size = 200,\n      prob = c(0.3, 0.3, 0.3, 0.1)\n    ),\n    q3 = mosaic::sample(value_labels,\n      replace = TRUE, size = 200,\n      prob = c(0.2, 0.1, 0.1, 0.6)\n    ),\n    q4 = mosaic::sample(value_labels,\n      replace = TRUE, size = 200,\n      prob = c(0.4, 0.2, 0.1, 0.3)\n    ),\n    q5 = mosaic::sample(value_labels,\n      replace = TRUE, size = 200,\n      prob = c(0.1, 0.2, 0.5, 0.2)\n    )\n  ) %>%\n  # Set VARIABLE labels\n  labelled::set_variable_labels(\n    .data = .,\n    q1 = variable_labels[1],\n    q2 = variable_labels[2],\n    q3 = variable_labels[3],\n    q4 = variable_labels[4],\n    q5 = variable_labels[5]\n  )\n# Values within the variables are already labelled\n###\nhead(my_survey_data, 6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"q1\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"q2\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"q3\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"q4\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"q5\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"always\",\"2\":\"sometimes\",\"3\":\"always\",\"4\":\"always\",\"5\":\"never\"},{\"1\":\"always\",\"2\":\"often\",\"3\":\"always\",\"4\":\"never\",\"5\":\"always\"},{\"1\":\"often\",\"2\":\"sometimes\",\"3\":\"never\",\"4\":\"sometimes\",\"5\":\"often\"},{\"1\":\"sometimes\",\"2\":\"often\",\"3\":\"always\",\"4\":\"never\",\"5\":\"sometimes\"},{\"1\":\"never\",\"2\":\"never\",\"3\":\"often\",\"4\":\"always\",\"5\":\"sometimes\"},{\"1\":\"never\",\"2\":\"often\",\"3\":\"always\",\"4\":\"always\",\"5\":\"often\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n###\nstr(my_survey_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [200 Ã— 5] (S3: tbl_df/tbl/data.frame)\n $ q1: chr [1:200] \"always\" \"always\" \"often\" \"sometimes\" ...\n  ..- attr(*, \"label\")= chr \"Do you practice Analytics?\"\n $ q2: chr [1:200] \"sometimes\" \"often\" \"sometimes\" \"often\" ...\n  ..- attr(*, \"label\")= chr \"Do you code in R?\"\n $ q3: chr [1:200] \"always\" \"always\" \"never\" \"always\" ...\n  ..- attr(*, \"label\")= chr \"Have you published your R Code?\"\n $ q4: chr [1:200] \"always\" \"never\" \"sometimes\" \"never\" ...\n  ..- attr(*, \"label\")= chr \"Do you use Quarto as your Workflow in R?\"\n $ q5: chr [1:200] \"never\" \"always\" \"often\" \"sometimes\" ...\n  ..- attr(*, \"label\")= chr \"Will you use R at Work?\"\n```\n\n\n:::\n\n```{.r .cell-code}\n##\nmy_survey_data %>%\n  gglikert(labels_size = 3, width = 0.5) +\n  labs(\n    title = \"Do you use R Survey\",\n    subtitle = \"Creating and Using Labelled Data\",\n    caption = \"Using gglikert from ggstats package\"\n  ) +\n  scale_fill_brewer(\n    palette = \"Spectral\",\n    name = \"Responses\",\n    labels = c(\"never\", \"sometimes\", \"often\", \"always\"),\n  ) +\n  geom_vline(xintercept = 0) +\n  theme_custom() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=2100}\n:::\n:::\n\n\nIt seems many people in the survey plan to use R at work!! And have\npublished R code as well. But Quarto seems to have mixed results! But of\ncourse this is a toy dataset!!\n\nSo there we are with Survey data analysis and plots!\n\nThere are a few other plots with this type of data, which are useful in\nvery specialized circumstances. One example of this is the\n`agreement plot`[^5] which captures the agreement between two (sets) of\nevaluators, on ratings given on a shared ordinal scale to a set of\nitems. An example from the field of medical diagnosis is the opinions of\ntwo specialists on a common set of patients. However, that is for a more\nadvanced course!\n\n[^5]: Bangdiwala, S.I., Shankar, V. The agreement chart. BMC Med Res Methodol 13, 97 (2013). https://doi.org/10.1186/1471-2288-13-97\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?\n\n- Likert plots are like stacked bar-charts aligned horizontally, back to back {{< iconify noto open-hands-medium-skin-tone size = 3x >}}. They are useful to indicate aspects like opinion, belief, and habits. \n- The scale for Likert data is [**ordinal**](../05-NatureData/index.qmd#how-do-we-spot-data-variable-types): it should not be assumed that the points on the Likert scale (\"never\", \"sometimes\", \"often\", \"always\") are *separated by the same distance*. \n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\n\nLikert Plots for Survey data are not too different from Bar Plots; we can view the Likert Charts as a set of stacked bar charts, based on Likert-scale response counts. At a pinch we can make a Likert Plot with vanilla bar graphs, but the elegance  and power of the `ggstat` package is undeniable. The  packages `sjPlot` and `sjlabelled` also feature a `plot_likert` graphing function which is very elegant too. \n\n## {{< iconify openmoji person >}} Your Turn\n\n1.  Take some of the categorical datasets from the `vcd` and `vcdExtra`\n    packages and recreate the plots from this module. Go to <https://vincentarelbundock.github.io/Rdatasets/articles/data.html> and type \"vcd\" in the `search` box. You can directly load CSV files from there, using `read_csv(\"url-to-csv\")`.\n\n2. Including Edible Insects in our Diet!\n\n{{< downloadthis data/Survey-on-Edible-Insects-likerted-copy.csv dname=\"edible-insects\" label=\"Download the Edible Insects Dataset\" icon=\"database-fill-down\" type=\"info\" >}}\n\nThere are several questions here for each \"area\" of preference for edible insects: experience, fear, concern for the environment, etc. Take all the columns marked as *average* as your data for your Likert Plot. \n\n## {{< iconify ooui references-ltr >}} References\n\n1. Winston Chang (2024). *R Graphics Cookbook*. <https://r-graphics.org>\n1. Shelomi. (2022). Dataset for: *Factors Affecting Willingness and Future Intention to Eat Insects in Students of an Edible Insect Course*. [Data set]. Zenodo. <https://doi.org/10.5281/zenodo.7379294>\n1. What is a Likert Scale? <https://www.surveymonkey.com/mp/likert-scale/>\n1. Rickards, G., Magee, C., & Artino, A. R., Jr (2012). *You Can't Fix by Analysis What You've Spoiled by Design: Developing Survey Instruments and Collecting Validity Evidence*. Journal of graduate medical education, 4(4), 407â€“410. <https://doi.org/10.4300/JGME-D-12-00239.1>\n1. Jamieson, S. (2004). Likert scales: how to (ab)use them. Medical Education, 38(12), 1217â€“1218. <https://doi:10.1111/j.1365-2929.2004.02012.x>Â \n1. Mark Bounthavong. (May 16, 2019). *Communicating data effectively with data visualization â€“ Part 15 (Diverging Stacked Bar Chart for Likert scales)*. <https://mbounthavong.com/blog/2019/5/16/communicating-data-effectively-with-data-visualization-part-15-divergent-stacked-bar-chart-for-likert-scales>\n1. Anthony R. Artino Jr., Jeffrey S. La Rochelle, Kent J. Dezee & Hunter\nGehlbach (2014). *Developing questionnaires for educational research: AMEE Guide*. No. 87, Medical Teacher, 36:6, 463-474, DOI:10.3109/0142159X.2014.889814\nTo link to this article: <https://doi.org/10.3109/0142159X.2014.889814>\n1. Naomi B. Robbins, Richard M. Heiberger. *Plotting Likert and Other Rating Scales*. Section on Survey Research Methods â€“ JSM 2011. [PDF Available here](https://www.montana.edu/msse/Old_Data_analysis/Likert%20Survey%20Graphs.pdf)\n\n\n## {{< iconify streamline book-reading >}} Additional Readings\n\n1. Daniel LÃ¼decke. (2024-05-13). *Plotting Likert Scales with sjPlot*. <https://cran.r-project.org/web/packages/sjPlot/vignettes/plot_likert_scales.html>\n1. Joseph Larmarange. *Plot Likert-type items with gglikert()*. <https://cran.r-project.org/web/packages/ggstats/vignettes/gglikert.html>\n1. Piping Hot Data. *Leveraging Labelled Data in R*. <https://www.pipinghotdata.com/posts/2020-12-23-leveraging-labelled-data-in-r/\\>\n1. Bangdiwala, S.I., Shankar, V. *The agreement chart*. BMC Med Res Methodol 13, 97 (2013). <https://doi.org/10.1186/1471-2288-13-97>. Open Access. \n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nPackage    Version   Citation  \n---------  --------  ----------\nggstats    0.10.0    @ggstats  \nlabelled   2.14.1    @labelled \nsjPlot     2.8.17    @sjPlot   \n\n\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}