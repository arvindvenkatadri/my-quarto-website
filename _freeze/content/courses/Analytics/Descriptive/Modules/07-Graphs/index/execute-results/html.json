{
  "hash": "dca2de01d0b8fa120217291841eed5b0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"carbon:chart-3d\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> Graphs \nsubtitle: \"Charts and How they are generated from Data\"\ndate: 2021-11-01\ndate-modified: \"2025-07-17\"\nfig-retina: 1\norder: 07\nfig-cap-location: bottom\nimage: preview.png\nimage-alt: By Rudityas on Glazestock.com\ncategories: \n  - Data Variables\n  - Geometry\n  - Graph Types\n  - Mappable Aesthetics\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\nwebr:\n  packages: ['readr', 'dplyr','mosaic', 'skimr', 'ggformula', 'palmerpenguins', 'Lock5withR']\n---\n\n::: pa4\n::: {.athelas .ml0 .mt0 .pl4 .black-90 .bl .bw2 .b--blue}\n[\"Difficulties strengthen the mind, as labor does the body.\"]{.f5 .f4-m\n.f3-l .lh-copy .measure .mt0}\n\n[--- Seneca]{.f6 .ttu .tracked .fs-normal}\n:::\n:::\n\n## {{< iconify noto-v1 package >}} Setting up R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Data processing with tidy principles\nlibrary(mosaic) # Our go-to package for almost everything\nlibrary(ggformula) # Our plotting package\nlibrary(tidyplots) # New package for publication quality graphs\n\n# devtools::install_github(\"rpruim/Lock5withR\")\nlibrary(Lock5withR)\nlibrary(Lock5Data) # Some neat little datasets from a lovely textbook\nlibrary(kableExtra)\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n#### Plot Fonts and Theme\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(systemfonts)\nlibrary(showtext)\n## Clean the slate\nsystemfonts::clear_local_fonts()\nsystemfonts::clear_registry()\n##\nshowtext_opts(dpi = 96) # set DPI for showtext\nsysfonts::font_add(\n  family = \"Alegreya\",\n  regular = \"../../../../../../fonts/Alegreya-Regular.ttf\",\n  bold = \"../../../../../../fonts/Alegreya-Bold.ttf\",\n  italic = \"../../../../../../fonts/Alegreya-Italic.ttf\",\n  bolditalic = \"../../../../../../fonts/Alegreya-BoldItalic.ttf\"\n)\n\nsysfonts::font_add(\n  family = \"Roboto Condensed\",\n  regular = \"../../../../../../fonts/RobotoCondensed-Regular.ttf\",\n  bold = \"../../../../../../fonts/RobotoCondensed-Bold.ttf\",\n  italic = \"../../../../../../fonts/RobotoCondensed-Italic.ttf\",\n  bolditalic = \"../../../../../../fonts/RobotoCondensed-BoldItalic.ttf\"\n)\nshowtext_auto(enable = TRUE) # enable showtext\n##\ntheme_custom <- function() {\n  font <- \"Alegreya\" # assign font family up front\n\n  theme_classic(base_size = 14, base_family = font) %+replace% # replace elements we want to change\n\n    theme(\n      text = element_text(family = font), # set base font family\n\n      # text elements\n      plot.title = element_text( # title\n        family = font, # set font family\n        size = 24, # set font size\n        face = \"bold\", # bold typeface\n        hjust = 0, # left align\n        margin = margin(t = 5, r = 0, b = 5, l = 0)\n      ), # margin\n      plot.title.position = \"plot\",\n      plot.subtitle = element_text( # subtitle\n        family = font, # font family\n        size = 14, # font size\n        hjust = 0, # left align\n        margin = margin(t = 5, r = 0, b = 10, l = 0)\n      ), # margin\n\n      plot.caption = element_text( # caption\n        family = font, # font family\n        size = 9, # font size\n        hjust = 1\n      ), # right align\n\n      plot.caption.position = \"plot\", # right align\n\n      axis.title = element_text( # axis titles\n        family = \"Roboto Condensed\", # font family\n        size = 12\n      ), # font size\n\n      axis.text = element_text( # axis text\n        family = \"Roboto Condensed\", # font family\n        size = 9\n      ), # font size\n\n      axis.text.x = element_text( # margin for axis text\n        margin = margin(5, b = 10)\n      )\n\n      # since the legend often requires manual tweaking\n      # based on plot content, don't define it here\n    )\n}\n\n## Use available fonts in ggplot text geoms too!\nupdate_geom_defaults(geom = \"text\", new = list(\n  family = \"Roboto Condensed\",\n  face = \"plain\",\n  size = 3.5,\n  color = \"#2b2b2b\"\n))\n\n## Set the theme\ntheme_set(new = theme_custom())\n```\n:::\n\n\n\n\n\n## {{< fa chart-simple >}} Why Visualize?\n\n-   We can digest information more easily when it is pictorial\n-   Our [Working\n    Memories](https://www.understood.org/en/articles/working-memory-what-it-is-and-how-it-works)\n    are both *short-term* and *limited* in capacity. So a picture\n    abstracts the details and presents us with [an overall\n    summary]{style=\"background-color: yellow;\"}, an insight, or a story\n    that is both easy to recall and easy on retention.\n-   Data Viz includes [*shapes* that carry strong cultural\n    memories]{style=\"background-color: yellow;\"}; and impressions for\n    us. These cultural memories help us to use data viz in a *universal\n    way* to appeal to a wide variety of audiences. [(Do humans have a\n    gene for\n    geometry?]{style=\"background-color: yellow;\"}[^1][)]{style=\"background-color: yellow;\"};\n-   It helps sift facts from mere statements: for example:\n\n[^1]: <https://www.xcode.in/genes-and-personality/how-genes-influence-your-math-ability/>\n\n![Rape\nCapital](../../../../../materials/images/rape-capital.png){#fig-rape-capital}\n\n![Data Reveals\nCrime](../../../../../materials/images/data-reveals-crime.png){#fig-data_reveals-crime}\n\n- Visuals are a good starting point [to make **hypotheses**]{.black .bg-yellow} of what may be happening in the situation represented by the data\n\n## {{< iconify bx analyse >}} Why Analyze?\n\n- Merely looking at visualizations may not necessarily tell us the true magnitude or ***significance*** of things. \n- We need ***analytic methods or statistics*** to assure ourselves, or otherwise, of what we might suspect is happening\n- These methods also help to remove human bias and ensure that we are speaking with the assurance that our problem deserves. \n- Analysis uses ***numbers, or metrics***, that allow us to crystallize our ambiguous words/guesses into quantities that can be calculated with. \n- These metrics are calculable from our data, of course, but ***are not directly visible***, despite often being intuitive.\n\nSo both visuals and analytics. And as we will see, we will not be content with that: we will visualize our analytics, and analyze our visualizations!\n\nLet us recall first what we meant by ***tidy data***:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Tidy Data](../../../../../materials/images/tidydata.jpg){#fig-tidy-data fig-align='center' width=680px height=400px}\n:::\n:::\n\n\n::: callout-important\n## Tidy Data\n\n- Each **variable** is a column; \n- Each column contains *one kind* of data.\n- Each **observation** or **case** is a row.\n- Each **observations** contains *one value* for each variable.\n:::\n\n\n## {{< iconify material-symbols auto-graph >}} What is a Data Visualization?\n\n### {{< iconify carbon chart-network >}} Data Viz = Data + Geometry\n\nHow many *geometric things* do we know? Shapes? Lines? Axes? Curves? Angles? Patterns? Textures? Colours? Sizes? Positions? Lengths? Heights? Breadths? Radii? Textures? All these are **geometric aspects** or **aesthetics**, each with ***a unique property***. Some \"geometric things\" which we might consider are shown in the figure below.\n\n![Common Geometric Aesthetics in\nCharts](/content/materials/images/common-aesthetics-1.png){#fig-common-aesthetics fig-align=\"center\"}\n\n\n#### {{< iconify material-symbols function >}} Mapping\n\nHow can we ***manipulate*** these geometric aesthetics, perhaps like Kandinsky? The aesthetic has a property, an atribute, which we can manipulate in accordance with a data variable! [This act of \"mapping\" a **geometric thing** to a **variable**  and modifying its essential property is called Data Visualization]{style=\"background: yellow;\"} \n\nFor instance:\n\n- `length` or `height` of a `bar` can be made proportional\nto the`age` or `income` of a person\n- `Colour` of points can be mapped to `gender`, with a unique `colour` for each `gender`. \n- `Position` along an X-axis can vary in accordance with a `height` variable, and \n- `Position` along the Y-axis can vary with a `bodyWeight` variable.\n\nA chart may use more than one aesthetic: `position`, `shape`, `colour`,\n`height` and `angle`, `pattern` or `texture` to name several. Usually,\neach aesthetic is mapped to **just one** variable to ensure there is no\ncognitive error. There is of course a choice and you should be able to\n**map** any kind of variable to any geometric aspect/aesthetic that may\nbe available.\n\n::: callout-note\n### A Natural Mapping\n\nNote that here is also a \"natural\" mapping between aesthetic and\n**kind of variable**Quantitative or Qualitative as seen in @fig-tidy-data.\nFor instance, `shape` is rarely mapped to a Quantitative variable; we\nunderstand this because the nature of variation between the Quantitative\nvariable and the `shape` aesthetic is not similar (i.e. not continuous).\nBad choices may lead to bad, or worse, misleading charts!\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Data Vis Components and Features](index_files/figure-html/fig-data-vis-r-1.png){#fig-data-vis-r width=2100}\n:::\n:::\n\n\n\nIn the above chart, it is pretty clear what kind of variable is plotted\non the `x-axis` and the `y-axis`. What about `colour`? Could this be\nconsidered as **another axis** in the chart? There are also other aspects that\nyou can choose (not explicitly shown here) such as the\n`plot theme`(colours, fonts, backgrounds etc), which may **not be\nmapped** to data, but are nonetheless choices to be made. We will get\nacquainted with this aspect as we build charts.\n\nAs we will see, Data Variables may be ***transformed*** before being mapped to some geometric aesthetic, e.g. we may perform ***counts*** with a Qual variable that contains ***only*** the entries `{S, M, L, XL}`. We may also transform the `axes` (make them logarithmic, or even polar ) to create precisely the shape-meaning we wish. This allows us considerable flexibility in making charts!!\n\n## {{< iconify flat-color-icons workflow >}} Basic Types of Charts {#sec-data-viz}\n\nWe can therefore think of simple visualizations as [combinations of aesthetics,\nmapped to combinations of variables]{style=\"background: yellow;\"}. Some\nexamples:\n\n| Variable #1 | Variable #2 | Chart Names                                                                                   | Chart Shape                                                                                                                                                                                                                                                                                                                                    |\n|---------------|---------------|---------------|--------------------------|\n| Quant       | None        | Histogram and Density                                                                         | {{< iconify mdi-light chart-histogram size=4x >}} {{< iconify mdi chart-bell-curve size=4x >}} {{< iconify carbon box-plot size=4x >}}                                                                                                                                                                                                         |\n| Qual        | None        | Bar Chart                                                                                     | {{< iconify ion bar-chart size=4x >}}                                                                                                                                                                                                                                                                                                          |\n| Quant       | Quant       | Scatter Plot, Line Chart, Bubble Plot, Area Chart                                             | {{< iconify ph chart-scatter-bold size=4x >}} {{< iconify healthicons chart-line size=4x >}} {{< iconify carbon chart-bubble size=4x >}} {{< iconify ic twotone-area-chart size=4x >}}                                                                                                                                                         |\n| Quant       | Qual        | Pie Chart, Donut Chart, Column Chart, Box-Whisker Plot, Radar Chart, Bump Chart, Tree Diagram | {{< iconify teenyicons pie-chart-solid size=4x >}} {{< iconify teenyicons donut-chart-outline size=4x >}} {{< iconify fa6-solid chart-column size=4x >}} {{< iconify fluent data-whisker-20-regular size=4x >}} {{< iconify solar dumbbell-bold size=4x >}} {{< iconify carbon chart-radar size=4x >}} {{< iconify mdi family-tree size=4x >}} |\n| Qual        | Qual        | Stacked Bar Chart, Mosaic Chart, Sankey, Chord Diagram, Network Diagram                       | {{< iconify iwwa chart-style4 size=4x >}} {{< iconify carbon chart-marimekko size=4x >}} {{< iconify carbon sankey-diagram-alt size=4x >}} {{< iconify carbon network-4 size=4x >}}                                                                                                                                                            |\n|             |             |                                                                                               |                                                                                                                                                                                                                                                                                                                                                |\n\n: Geometries , Combinations, and Graphs\n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\n\nLet us take a look at Wickham and Grolemund's Data Science workflow picture:\n\n![Data Science Workflow](../../../../../materials/images/workflow.svg){#fig-datascience-workflow height=\"240px\"}\n\nSo there we have it:\n\n-   We import and clean the data\n-   Questions lead us to identify Types of Variables (Quant and Qual)\\\n-   Sometimes we may need to transform the data (long to wide, summarize, create new variables...)\n-   Further Questions lead to *relationships* between variables, which we describe using Data Visualizations\\\n-   Visualizations may lead to Hypotheses, which we Analyze or Model\n-   Data Visualizations are Data mapped onto Geometry \n-   Multiple Variable-to-Geometry Mappings = A Complete Data\n    Visualization\\\n-   Which is finally Communicated\n\n\nYou might think of all these Questions, Answers, Mapping as being\n[equivalent to **metaphors** as a language in itself]{.black .bg-yellow}. And indeed, in R we use a philosophy called the **Grammar of Graphics**! We will use this grammar in the R graphics packages that we will encounter. Other parts of the Workflow (Transformation, Analysis and Modelling) are also following similar grammars, as we shall see. \n\n## {{< iconify eos-icons ai >}} AI Generated Summary and Podcast\n\nThis is a tutorial on data visualization using the R programming language. It introduces concepts such as data types, variables, and visualization techniques. The tutorial utilizes metaphors to explain these concepts, emphasizing the use of geometric aesthetics to represent data. It also highlights the importance of both visual and analytic approaches in understanding data. The tutorial then demonstrates basic chart types, including histograms, scatterplots, and bar charts, and discusses the \"Grammar of Graphics\" philosophy that guides data visualization in R. The text concludes with a workflow diagram for data science, emphasizing the iterative process of data import, cleaning, transformation, visualization, hypothesis generation, analysis, and communication.\n\n<center>\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<audio controls> <source src='../../../../../materials/audio/NatureOfData.wav' type='audio/mpeg'> Your browser does not support the audio tag;  for browser support, please see:  https://www.w3schools.com/tags/tag_audio.asp </audio>\n```\n\n:::\n:::\n\n</center>\n\n\n\n## {{< iconify ooui references-ltr >}} References\n\n1.  Randomized Trials:<br>\n\n{{< youtube eGRd8jBdNYg >}} \n<br>\n\n1.  Martyn Shuttleworth, Lyndsay T Wilson (Jun 26, 2009). *What is the Scientific Method?* Retrieved Mar 12, 2024 from Explorable.com: <https://explorable.com/what-is-the-scientific-method>\n1.  Adam E.M. Eltorai, Jeffrey A. Bakal, Paige C. Newell, Adena J. Osband (editors). (March 22, 2023) *Translational Surgery: Handbook for Designing and Conducting Clinical and Translational Research*. A very lucid and easily explained set of chapters. ( I have a copy. Yes.)\n      - Part III. Clinical: fundamentals\n      - Part IV: Statistical principles\n1.  <u><https://safetyculture.com/topics/design-of-experiments/></u>\n1. Emi Tanaka. <https://emitanaka.org/teaching/monash-wcd/2020/week09-DoE.html>\n1.  [Open Intro Stats: Types of\n    Variables](https://openintro-ims.netlify.app/data-hello.html#variable-types)\n1.  Lock, Lock, Lock, Lock, and Lock. *Statistics: Unlocking the Power\n    of Data*, Third Edition, Wiley, 2021.\n    <https://www.wiley.com/en-br/Statistics:+Unlocking+the+Power+of+Data,+3rd+Edition-p-9781119674160)>\n1.  Claus Wilke. *Fundamentals of Data Visualization*.\n    <https://clauswilke.com/dataviz/>\n1. Albert Rapp. *Adding images to ggplot*. <https://albert-rapp.de/posts/ggplot2-tips/27_images/27_images>\n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nPackage         Version   Citation       \n--------------  --------  ---------------\nggformula       0.12.0    @ggformula     \nLock5Data       3.0.0     @Lock5Data     \nmosaic          1.9.1     @mosaic        \nTeachingDemos   2.13      @TeachingDemos \n\n\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}