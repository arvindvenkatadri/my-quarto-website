{
  "hash": "7b0f393b4d1d93d4a6d4cb1dbb46d923",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"\\U0001F4AD The Simplex Method - Intuitively\"\ndate: 14/Nov/2022\ndate-modified: \"2025-07-17\"\norder: 20\nabstract: We will look at developing an intuitive understanding of the Simplex Method for Linear Programming.\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(\n  echo = FALSE,\n  collapse = TRUE,\n  # cache = TRUE, autodep = TRUE,\n  comment = \"#\",\n  fig.show = \"asis\",\n  warning = FALSE, message = FALSE, fig.align = \"center\",\n  scipen = 1, digits = 2\n)\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(gMOIP)\n```\n:::\n\n\n## What is the Simplex Method?\n\nTo be written up.\n\n## A ~~Random~~ Walk with the Simplex Method\n\nLet us try to form a geometric intuition for the Simplex method.\n\nWe will define an LP problem, and geometrically traverse the steps the\nSimplex method might take to solve for the optimum solution.\n\nLet us define a problem:\n\n$$\nMaximise\\ 7.75x_1 + 10x_2\\\\\n$$ $$\nSubject\\ to\\\\\n  \\begin{cases}\n    C1: -3x_1 + 2x_2 &<= 3\\\\\n    C2: 2x_1 + 4x_2 &<= 27\\\\\n    C3: 9x_1 + 10x_2 &<= 90\\\\\n    x_1, x_2 >= 0\n  \\end{cases}\n$$\n\nThe Objective function is: $7.75x_1 + 10x_2$\n\nThe Constraints are defined by the three *inequalities* $C1::C3$. In\norder to plot these, we *convert the inequalities to equalities* and\nplot these as lines. Each line splits the $x_1:x_2$ plane into two\nhalf-planes. The inequality part is then taken into account by choosing\nthe appropriate *half-plane* created by the equation. The *intersection*\nof all the half-planes defined by the constraints is the **Feasibility\nRegion**.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nThe Feasibility region for this LP problem is plotted below:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/SimplexMethod-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nThe corner points of the Feasibility Region are:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"x1\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"x2\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"A\",\"2\":\"0.000\",\"3\":\"0.0000\"},{\"1\":\"B\",\"2\":\"10.000\",\"3\":\"0.0000\"},{\"1\":\"C\",\"2\":\"5.625\",\"3\":\"3.9375\"},{\"1\":\"D\",\"2\":\"2.625\",\"3\":\"5.4375\"},{\"1\":\"E\",\"2\":\"0.000\",\"3\":\"1.5000\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nRecall that:\n\n-   The optimum in an LP problem is found **on** the boundary, at one of\n    the vertices\n-   At each of these vertices one or more constraints ($C1::C_n$) is\n    *tight*, i.e. there is no slack.\n\n## Procedure\n\n1.  We start with an arbitrary point on the edge of the Feasibility\n    Region. $A = (0,0)$ is a common choice. At this point, since all\n    variables are $0$, the objective function is also $0$.\n\n2.  We (arbitrarily) decide to **move along the boundary** of the\n    Feasibility Region, to another FSP. We arbitrarily chose the $x_1$\n    axis, and set/keep $x_2 = 0$. We now wish to find out the $x_1$\n    coordinate of the next FSP point. This would be at the intersection\n    of the $x_1$ axis and *one of* the Constraint lines.\\\n    All the three Constraint Lines would possibly intersect the $x_1$\n    axis. We need to choose that *intercept point* that has the\n    smallest, non-negative $x_1$ intercept value. (Why?)\\\n    So, which *Constraint Line* intersects the $x_1$ axis at the\n    **smallest value**? Is it point B, or point F?\\\n    To find out, we substitute $x_2 = 0$ in each of the Constraint\n    equations, and solve for the $x_1$:\\\n    $$\n    \\begin{cases}\n    C1: -3x_1 + 2 \\times 0 = 3 \\ => x_1 = \\color{red}{-1}\\\\\n    C2: 2x_1 + 4\\times0 = 27 \\ => x_1 = 13.5\\ Point\\ F\\\\\n       {\\mathbf{ \\color{lightgreen}{C3}: 9x_1 + 10\\times0 = 90 \\ => x_1 = 10\\  \\color{lightgreen}{Point\\ B}}}\n    \\end{cases}\n    $$\\\n    Negative values for any variable are not permitted. So the smallest\n    value of intercept is $x_1 = 10$ for Constraint $C3$. We therefore\n    move to point $B(10,0)$. At this point the objective function has\n    improved to:\n\n$$\nObjective = 7.75\\times 10 + 10\\times0 = 77.5\\ at\\ Point\\ B\n$$\n\n3.  We now start from Point B, and move to the next nearest point. In\n    identical fashion to Step2, we \"imagine\" that we move along *a new\n    axis* defined by:\\\n    $$\n    Intercept = Point\\ B(10,0)\\\\ \n    $$ $$\n    Equation = Constraint\\ C3: 9x_1 + 10x_2 = 90\\\\\n    $$ We express $x_1$ in terms of $x_2$ with $C3$: $$\n    \\hat C3: x_1 = \\frac{90 - 10x_2}{9}\n    $$ As in Step 2, we substitute this equation $\\hat C3$ into the\n    other two constraints, $C1$ and $C2$: $$\n    \\begin{cases}\n    C1: -3\\times \\frac{90 - 10x_2}{9} + 2x_2 = 3 \\ => x_2 = 6.18\\ Point\\ K\\\\\n     {\\mathbf{ \\color{lightgreen}{C2}: 2\\times \\frac{90 - 10x_2}{9}+ 4x_2 = 27 => x_2 = 3.93\\ \\color{lightgreen}{Point\\ C}}}\n    \\end{cases}\n    $$ As before we choose the smaller of the two intercepts, so\n    $x_2 = 3.93$. Calculating for $x_1$, we get point $C(5.63, 3.93)$.\n    At this point the objective function has improved to:\n\n$$\n7.75\\times 5.63 + 10\\times 3.93 = 82.9\\ at\\ Point\\ C\n$$\n\n4.  We now proceed along the constraint line $C2$ towards the next\n    point. In identical fashion to Step 2 and 3, we \"imagine\" that we\n    move along *a new axis* defined by: $$\n    Intercept = Point\\ C(5.63,3.93)\n    $$ $$\n    Equation = Constraint\\ C2: 2x_1 + 4x_2 = 27 \\\\\n    $$ Again, We express $x_1$ in terms of $x_2$ with $C2$ this time: $$\n    \\hat C2: x_1 = \\frac{27 - 4x_2}{2}\n    $$ As in Step 2 and, we substitute this equation $\\hat C2$ into the\n    other constraint, the only remaining $C1$: $$\n    {\\mathbf C1: -3\\times \\frac{27 - 4x_2}{2} + 2x_2 = 3 \\ => x_2 = 5.44\\ Point\\ D\\\\}\n    $$ Calculating for $x_1$, we get point $C(2.63, 5.44)$. At this\n    point the objective function has ~~improved~~ decreased to: $$\n    7.75\\times 2.63 + 10\\times 5.44 = 74.8\\ at\\ Point\\ D\n    $$ Since this value for the Objective function is **smaller** than\n    that at the previous point, our search terminates and we decide that\n    Point $C(5.63,3.93)$ is the optimal point.\\\n    So the final result is: $$\n       x_1(max) = 5.63\\\\ \n     $$ $$\n       x_2(max) = 3.93\\\\ \n     $$ $$\n       Maximum\\ Objective\\ Function\\ Value = 82.9\n     $$ The final result is plotted below:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Summary\n\nThe essence of this \"intuitive method\" can be captured as follows:\n\n1.  Start from a known simple point on the edge of Feasibility Region,\n    e.g. (0,0), since the two coordinate axes frequently form two edges\n    to the Feasibility Region.\\\n2.  Move along one of the axis to find a first adjacent edge point. This\n    adjacent point corresponds to the \"tightening\" of one or other of\n    the Constraint equations(i.e. slack = 0 for that Constraint)\\\n3.  Calculate the Objective function at that point.\\\n4.  Use this new point as the next starting point and move along the\n    Constraint line from the previous step.\\\n5.  Repeat step 2 and 3, calculating the Objective function each time.\\\n6.  Keep the solution point where the objective function hits a maximum,\n    i.e. when moving to the next point *reduces* the value of the\n    Objective function.\n\n------------------------------------------------------------------------\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}