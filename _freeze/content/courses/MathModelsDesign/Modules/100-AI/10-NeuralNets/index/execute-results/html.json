{
  "hash": "b3be185cf4726d3015a20f80d0f44fd6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"lucide:person-standing\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> <iconify-icon icon=\"mdi:human-female-dance\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> Working with Neural Nets\nsubtitle: \"Can you Dance?\"\nsubject: \"Using Classification to Detect Human Pose\"\nabstract: \"\"\ndate: 03/Dec/2024\ndate-modified: \"2025-07-29\"\norder: 10\ncategories:\n- Classification\n- CNN\n- ML\n- DL\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n::: {#fig-Bharatanatyam layout-ncol=\"2\"}\n![](../../../../../materials/images/Bharathanatyam_By_Ranjitha.jpg){#fig-pose}\n\n![](../../../../../materials/images/Varnam.jpg){#fig-mudra-abhinaya}\n\nBharat Natyam Poses\n:::\n\n\n\n\n\n\n## Introduction\n\nOne of our aims with Creative Coding is to of course make things\ninteractive. Here we will apply the `ml5.js` library in `p5.js` to use\nan ML/DL algorithm called **Classification** to detect human poses in\nfront of the camera. The code can then create unique experiences based\non pose-detection with ML, and the subsequent code that responds to the\nuser.\n\nWe will be following the ideas from here:\n\n#### Adavu Detection\n\n<https://docs.ml5js.org/#/reference/bodypose>\n\n#### Mudra Detection\n\n<https://docs.ml5js.org/#/reference/handpose>\n\n#### Bhava Detection\n\n<https://docs.ml5js.org/#/reference/facemesh>\n\n## But Wait! How does Classification Work?\n\nAh, peasants. Isn't it enough that you can dance?\n\nSo, we can perform Classification based on Machine Learning (ML)\nstructured and algorithms such as:\n\n1)  [Random\n    Forests](https://arvindvenkatadri.com/teaching/5-ml-for-artists/3-classification-with-orange/).\n    Also see [Google Decision\n    Forests](https://developers.google.com/machine-learning/decision-forests).\n    We will try to get an intuition into `bootstrapping` of variables in\n    data, creating decision `trees`, and making *random selections* of\n    variables from a dataset to create `random forests`.\n\n2)  And there are Deep Learning (DL) structured and algorithms that\n    allow us to do the same things, perhaps in a more \"black-box\"\n    manner. We will peep into:\n\n    a.  [The Perceptron](../20-Perceptron/index.qmd)\n    b.  [The Multilayer Perceptron](../30-MLP/index.qmd)\n    c.  [Backpropagation](../40-BackProp/index.qmd)\n    d.  [Gradient Descent](../50-GradientDescent/index.qmd)\n    e.  [~~Convolutional Neural Nets~~](../60-Convnet/index.qmd) (in a\n        later course)\n\nHere, we will also try to build an intuitive sense of some of the\ntechnical terminology involved: `convolution`, `regression`,\n`activation`, `weighting`...and such terms that generally elude\npeasants.\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?\n\nUnderstanding the underlying math inside of Neural Nets can help us\nappreciate better how to apply them design with them, and even keep them\nas simple as needed.\n\n## How to Train your ~~Dragon~~ Neural Network\n\n{{< video https://www.youtube.com/watch?v=8HEgeAbYphA >}}\n\n## {{< iconify ooui references-ltr >}} References\n\n1.  Colah's Blog.(Apr 6, 2014). *Neural Networks, Manifolds, and\n    Topology*.\n    <https://colah.github.io/posts/2014-03-NN-Manifolds-Topology/>. Very\n    simple and readable article.\n2.  Machine Learning Tokyo: Interactive Tools for ML/DL, and Math.\n    <https://github.com/Machine-Learning-Tokyo/Interactive_Tool>\n3.  https://developers.google.com/machine-learning.<https://developers.google.com/machine-learning>\n4.  The Neural Network Zoo - The Asimov Institute.\n    <http://www.asimovinstitute.org/neural-network-zoo/>\n5.  *Itâ€™s just a linear model: neural networks edition*.\n    <https://lucy.shinyapps.io/neural-net-linear/>\n\n### Convolutional Neural Networks\n\n1.  *Digit Recognition with CNNs*. Interactive!\n    <https://transcranial.github.io/keras-js/#/mnist-cnn>\n2.  *CNN Convoluter*. <https://pwwang.github.io/cnn-convoluter/>\n3.  *CNN Explainer: Learn Convolutional Neural Network (CNN) in your\n    browser!*. <https://poloclub.github.io/cnn-explainer/>\n4.  Deep Lizard. *Understanding Convolution Operations in Neural\n    Networks*. <https://deeplizard.com/resource/pavq7noze2>\n5.  Andrej Karpathy. *ConvNetJS: Deep Learning in your\n    browser*.<https://cs.stanford.edu/people/karpathy/convnetjs/>\n6.  Adit Deshpande. *A Beginner's Guide to CNNs*.\n    <https://adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/>\n7.  *Anyone Can Learn AI Using This Blog*.\n    <https://colab.research.google.com/drive/1g5fj7W6QMER4-03jtou7k1t7zMVE9TVt#scrollTo=V8Vq_6Q3zivl>\n8.  Practical Deep Learning for Coders: An Online Free\n    Course.<https://course.fast.ai>\n9.  Neural Networks Visual with\n    [vcubingx](https://youtube.com/@vcubingx?feature=shared)\n    -   Part 1. <https://youtu.be/UOvPeC8WOt8>\n    -   Part 2. <https://www.youtube.com/watch?v=-at7SLoVK_I>\n\n#### LLMs\n\n1.  Brendan Bycroft.*Visualizing LLMs*. <https://bbycroft.net/llm>\n2.  Rohit Patel (20 Oct 2024). *Understanding LLMs from Scratch Using\n    Middle School Math: A self-contained, full explanation to inner\n    workings of an LLM*.\n    <https://towardsdatascience.com/understanding-llms-from-scratch-using-middle-school-math-e602d27ec876>\n3.  AI-powered reporting and annotation for radiology.\n    <https://www.md.ai>\n\n#### Using R for DL\n\n1.  *`torch` for R: An open source machine learning framework based on\n    `PyTorch`.* <https://torch.mlverse.org>\n2.  Torch Interactive Tutorial.\n    <https://mlverse.shinyapps.io/torch-tour>\n3.  Geeks for Geeks. *Convolutional Neural Nets in R*.\n    <https://www.geeksforgeeks.org/convolutional-neural-networks-cnns-in-r/>\n4.  David Selby (9 January 2018). Tea and Stats Blog. *Building a neural\n    network from scratch in R*.\n    <https://selbydavid.com/2018/01/09/neural-network/>\n5.  Akshaj Verma. (2020-07-24). *Building A Neural Net from Scratch\n    Using R - Part 1 and Part 2*.\n    <https://rviews.rstudio.com/2020/07/20/shallow-neural-net-from-scratch-using-r-part-1/>\n    and\n    <https://rviews.rstudio.com/2020/07/24/building-a-neural-net-from-scratch-using-r-part-2/>\n6.  Ander Fernandez Jauregui.\n    <https://anderfernandez.com/en/blog/how-to-create-neural-networks-with-torch-in-r/>\n7.  <https://f0nzie.github.io/rtorch-minimal-book/>\n\n## Textbooks\n\n1.  Michael Nielsen. *Neural Networks and Deep Learning*. [Available\n    Online](https://neuralnetworksanddeeplearning.com)\n2.  The Little Book of Deep Learning. [Available\n    Online](https://fleuret.org/francois/lbdl.html)\n3.  Simone Scardapane. *Alice's Adventures in Diffferentiable\n    WonderLand: A Primer on Designing Neural Networks*.\n    <https://www.sscardapane.it/alice-book/>\n4.  Parr and Howard (2018). *The Matrix Calculus You Need for Deep\n    Learning*.<https://arxiv.org/abs/1802.01528>\n5.  Zhang, Lipton, Li, Smola. *Dive into Deep Learning*.\n    <https://www.d2l.ai/>\n6.  Sigrid Keydana. *Deep Learning and Scientific Computing with R\n    torch*\n    <https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/>\n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nPackage       Version       Citation     \n------------  ------------  -------------\nkeras         2.15.0        @keras       \nsafetensors   0.1.2         @safetensors \ntensorflow    2.16.0.9000   @tensorflow  \ntorch         0.15.1        @torch       \n\n\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}