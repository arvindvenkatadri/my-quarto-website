{
  "hash": "2f158ca0a53a2de814e5597bfb1cf991",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Fractals\nsubtitle: \"\"\nsubject: \"Shapes and Code\"\nabstract: \"A Geometric Jewellery Store\"\ndate: 02/May/2024\ndate-modified: \"2025-07-29\"\norder: 30\ncategories:\n- Iterated Functions\n- Fractals\n- Mandelbrot\n- Julia\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n:::: pa4\n::: {.athelas .ml0 .mt0 .pl4 .black-90 .bl .bw2 .b--blue}\n[What is in us that must reach the top,\n  that longs to look down upon the world as if a god?<br>\n  Donâ€™t we know that in this infinite space\n  the same rocks at the seashore know the secret of each peak?]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}\n\n  [Underneath the surface are caverns, caves\n  soaring cathedrals the earth has made.<br>\n  What arias does she sing to dripping water, bats\n  and other seekers of wisdom?<br>\n  What prayers echo\n  while the ceilings reach slowly to the floor?]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}\n\n  [The open window houses everything:<br>\n  a cat lounging in the sunlight, the call of neighbors,\n  the breath of possibility.]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}\n\n[- Robin Walthery Allen]{.f6 .ttu .tracked .fs-normal}\n:::\n::::\n\n\n## {{< iconify icons8 idea >}} Inspiration: A Geometric Jewellery Store\n\n![Photo by\n<a href=\"https://unsplash.com/@kolyakorzh?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Mykola/Kolya\nKorzh</a> on\n<a href=\"https://unsplash.com/photos/brown-wooden-bird-house-ornament-HFogW6fHv4E?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>](images/featured.jpg)\n\nExplore some jewels here: <https://math.hws.edu/eck/js/mandelbrot/MB.html>\n\n\n\n## An Introduction to Fractals\n\nLet us listen to the late great Benoit Mandelbrot, on the **Art of\nRoughness**.\n\n{{< video https://youtu.be/wQTnVEXAtBY >}}\n\n\n### Julia, and Julia, and still more Julia....\n\nLet us head off to <https://mathigon.org/course/fractals/mandelbrot> and\nplay with some iterated functions in the Complex Plane. This will lead\nus into an intuitive understanding of Julia and Mandelbrot Fractals.\n\nNow we are ready(?) to understand this video on Julia fractals!\n\n{{< video https://youtu.be/2AZYZ-L8m9Q >}}\n\n\n{{< video https://youtu.be/8ma6cV6fw24 >}}\n\n\n## Designing with Julia/Mandelbrot fractals\n\nLet us play with this interactive Mandelbrot-Julia combination diagram!\n\n<iframe width=\"100%\" height=\"640\" frameborder=\"0\" src=\"https://observablehq.com/embed/@mcmcclur/julia-sets-and-the-mandelbrot-set?cells=topmatter%2Cwidget%2Cjulia_svg\">\n\n</iframe>\n\n1. We now that the Mandelbrot fractal uses the Iterated Function $z \\leftarrow ~ z^2 + C$, where $C$ is a starting complex constant.\n1. The Mandelbrot (at left) is plotted in a coordinate space for $C$.\n1. The Julia(s) (at right) are plotted in a coordinate space for $z$.\n1. Depending upon the starting value of $C$ in the Mandelbrot we get a different choice of Julia fractal in the right side diagram.\n1. In this \"single-colour\" Mandelbrot, we see that for those values of $C$ where the corresponding Julia is ***connected***, the $C$ point is coloured black in the Mandelbrot. Else it is coloured white and appears to be \"outside\". \n1. Place your cursor inside the Julia diagram. A connected Julia always shows an iterative trace that lies within itself. A dis-connected Julia has points going off to infinity...\n1. Varying $C$ we see a systematic variation of the attainable Julia fractals.\n\n### Jewellery Shopping with Mandelbrot\n\nEver gone shopping for jewellery? How is the place organized? That is a\ngood metaphor for how Mandelbrot Set is generated!! Here is an image to complete the Jewellery Store metaphor:\n\n![Mandelbrot and Julia Mapping](../../../../../materials/images/Mandelbrot and Julia Mapping.png){#fig-mandelbrot-julia-mapping}\n\n## Fractals with Code\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke;\"}\n\n### Using p5.js\n\n<iframe width=\"100%\" height=\"640\" width=\"640\" frameborder=\"0\"\nsrc=\"https://editor.p5js.org/arvindv/full/nxl1XTmvg\">\n</iframe>\n\nAnd here is the Julia set:\n\n<iframe width=\"100%\" height=\"640\" width=\"640\" frameborder=\"0\"\nsrc=\"https://editor.p5js.org/codingtrain/full/G6qbMmaI\">\n</iframe>\n\nSee also this sketch for a static Julia, set by a user choice of $C$.\n<https://editor.p5js.org/AhmadMoussa/full/nDrd9EfHr>\n\n\n::: {.content-hidden when-format=\"html\"}\n### Using R\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(blogdown)\nlibrary(tidyverse)\nlibrary(ggformula)\n###\nlibrary(LindenmayeR)\nlibrary(LearnGeom)\nlibrary(TurtleGraphics)\n###\nlibrary(mosaicCalc) # Analytic Calculus\nlibrary(ambient) # Noise generation in R\nlibrary(plot3D) # 3D plots for explanation\nlibrary(caracas)\nlibrary(downloadthis)\nlibrary(knitr)\nlibrary(kableExtra)\n## Markdown boiler plate stuff!!\n# ![An Elephant](elephant.png){#fig-elephant}\n# This is illustrated well by @fig-elephant.\n#\n# ### Figure Panel Divs\n#     ::: {#fig-elephants layout-ncol=2}\n#     ![Surus](surus.png){#fig-surus}\n#     ![Hanno](hanno.png){#fig-hanno}\n#      Famous Elephants\n#     :::\n#     Adding download buttons\n#     data that has been read in\n#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname=\"house_prices\" label=\"Download the House Prices Dataset\" icon=\"database-fill-down\" type=\"info\" >}}\n#    existing file\n#    {{< downloadthis Orange/grouped-summaries.ows dname=\"grouped_summaries\" label=\"Download the Orange Workflow\" icon=\"database-fill-down\" type=\"info\" >}}\n```\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n#### Koch Snowflake\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_min <- -10\nx_max <- 10\ny_min <- -12\ny_max <- 12\nCoordinatePlane(x_min, x_max, y_min, y_max)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create three points, to make a triangle\nP1 <- c(-5, 0) # points\nP2 <- c(5, 0)\nP3 <- c(0, 10)\n\n# Parameters for a Koch Fractal\n# Iterative Function\nangle <- 60 # Angle of new linesegments\ncut1 <- 1 / 3 # location along existing line segment\ncut2 <- 2 / 3 # location along existing line segment\nf <- 1 # Scale factor. Positive\nit <- 6\nFractalSegment(P1, P2, angle, cut1, cut2, f, it)\nFractalSegment(P1, P3, -60, cut1, cut2, f, it)\nFractalSegment(P3, P2, -60, cut1, cut2, f, it)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Koch-Fractals-1.png){width=2100}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Koch\nx_min <- -6\nx_max <- 6\ny_min <- -12\ny_max <- 6\nCoordinatePlane(x_min, x_max, y_min, y_max)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nP1 <- c(-5, 0)\nP2 <- c(5, 0)\nP3 <- c(0, -10)\nit <- 4\nKoch(P1, P2, it)\nKoch(P3, P1, it)\nKoch(P2, P3, it)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/simple-fractals-1.png){width=2100}\n:::\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#########################################\n# Turtle Graphics stuff\n\nturtle_init(width = 150, height = 150, mode = \"cycle\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=2100}\n:::\n\n```{.r .cell-code}\nturtle_setpos(x = 50, y = 50)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-2.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-3.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-4.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-5.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-6.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-7.png){width=2100}\n:::\n\n```{.r .cell-code}\nturtle_do({\n  for (i in 1:180) {\n    turtle_forward(distance = 2)\n    turtle_right(angle = 2)\n  }\n})\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-8.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-9.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-10.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-11.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-12.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-13.png){width=2100}\n:::\n:::\n\n\n\n#### Fractal Tree with Turtle Graphics\n\n::: {.cell}\n\n```{.r .cell-code}\nfractal_tree <- function(s = 100, n = 2) {\n  if (n <= 1) {\n    turtle_forward(s)\n    turtle_up()\n    turtle_backward(s)\n    turtle_down()\n  } else {\n    turtle_forward(s)\n\n    a1 <- runif(1, 10, 60)\n    turtle_left(a1)\n    fractal_tree(s * runif(1, 0.25, 1), n - 1)\n    turtle_right(a1)\n\n    a2 <- runif(1, 10, 60)\n    turtle_right(a2)\n    fractal_tree(s * runif(1, 0.25, 1), n - 1)\n    turtle_left(a2)\n\n    turtle_up()\n    turtle_backward(s)\n    turtle_down()\n  }\n}\n\nset.seed(123)\nturtle_init(500, 600, \"clip\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=2100}\n:::\n\n```{.r .cell-code}\nturtle_do({\n  turtle_up()\n  turtle_backward(250)\n  turtle_down()\n  turtle_col(\"darkgreen\")\n  fractal_tree(100, 12)\n})\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-3.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-4.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-5.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-6.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-7.png){width=2100}\n:::\n:::\n\n\n\n:::\n\n### Using XaOS\n\nLet us use the XaOS software to make different kinds of fractals. A\nsample screen to explore the Mandelbrot fractal is here:\n\n<iframe width=\"100%\" height=\"1048\" frameborder=\"0\" src=\"https://xaos-project.github.io/XaoSjs/\">\n\n</iframe>\n\n\n:::\n\n\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?\n\n- Fractal shapes are all around us in nature\n- These mathematically created fractal shapes can have uses that are limited only by your imagination: want to design footwear that does not slip?\n- Different parts of the Mandelbrot fractal allow us to contemplate a variety of fractal shapes\n- And if we choose [a different IFS function](https://larryriddle.agnesscott.org/ifs/ifs.htm) (rather than $z \\rightarrow z^2 + C$), we can think of entire families of shapes!\n\n## {{< iconify ooui references-ltr >}} References\n\n1. An Intrepid Tour of the Complex Fractal World using Dark Heart Package 2.2.0 for Mac. <https://dhushara.com/DarkHeart/#Anchor-Introduction-35326>\n1. Gary William Flake.(28 August 1988) *The Computational Beauty of Nature*. ISBN: 978-0262062008. MIT Press.\n1.  Batty, M. and Longley, P. A. (1994) *Fractal Cities: A Geometry of\n    Form and Function*, London: Academic Press, 1994.\n1.  Wang H, Luo S, Luo T. *Fractal characteristics of urban surface\n    transit and road networks: Case study of Strasbourg, France.*\n    Advances in Mechanical Engineering. 2017;9(2).\n    <doi:10.1177/1687814017692289>\n1. Larry Riddle.*Classic Iterated Function Systems*. <https://larryriddle.agnesscott.org/ifs/ifs.htm>\n1. Turtle Graphics in R: <https://cran.r-project.org/web/packages/TurtleGraphics/vignettes/TurtleGraphics.pdf> \n1.  <https://www.reddit.com/r/CitiesSkylines/comments/9r0y4e/grid_idea_im_working_on_fractal_squares/>\n1.  Menger Sponge:\n    <https://blogs.scientificamerican.com/roots-of-unity/a-few-of-my-favorite-spaces-the-menger-sponge/>\n1.  <http://fractalfoundation.org/resources/fractal-software/>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}