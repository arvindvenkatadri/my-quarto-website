{
  "hash": "8902e94f1067b01cf2e4868169e85bc2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"mdi:reiterate\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> <iconify-icon icon=\"gravity-ui:function\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> FM based Sound Synthesis\nsubtitle: \"\"\nsubject: \"\"\nabstract: \"\"\ndate: 23/Jan/2025\ndate-modified: \"2025-07-17\"\norder: 16\ncategories:\n  - Frequency Modulation\n  - Bessel Functions\n  - Chowning Method\n  - Aliasing\n  - Harmonic Synth\n  - Inharmonic Synth\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\ndraft: true\n---\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n## Introduction\n\nSo we understand the Fourier Transform: we can express any waveform as a sum of sinusoids that are appropriately weighted and are at discrete multiples of a chosen \"fundamental frequency\".\n\nIn the module [Additive Synthesis](../12-AdditiveSynth/index.qmd), we learnt about how a sum of properly tuned and weighted frequency components can be used to synthesize sounds. Here is another approach: of **modulating** or changing the *frequency* of a *carrier* wave to generate a large multiple of harmonic and in-harmonic sidetones to synthesize sound. \n\n## {{< iconify icons8 idea >}} Inspiration\nTo be Found!!\n\n## What is the Frequency Modulation?\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnus <- c(0:5, 10, 20)\n\nx <- seq(0, 40, length.out = 801)\nyl <- c(-.5, 1)\nplot(x, x,\n  ylim = yl, ylab = \"\", type = \"n\",\n  main = \"Bessel Functions  J_nu(x)\"\n)\nabline(h = 0, v = 0, lty = 3)\nfor (nu in nus) lines(x, besselJ(x, nu = nu), col = nu + 2)\nlegend(\"topright\", legend = paste(\"nu=\", nus), col = nus + 2, lwd = 1, bty = \"n\")\n```\n:::\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Bessel Functions](index_files/figure-html/bessel-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n\n## What is FM based Sound Synthesis?\n\n\n\n## Design Principles for FM Synthesis\nWe will follow the Chowning method here. \n\n## FM Synthesis with Code\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke; \"}\n\n### Using p5.js\n\n### Using R\n\n:::\n\n\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?\n\n## {{< iconify ooui references-ltr >}} References\n\n1. John Chowning.(September 1973). *The Synthesis of Complex Audio Spectra by Means of Frequency Modulation*. Journal of the Audio Society. [PDF](../../../../../materials/pdfs/Chowning-Synthesis-using-FM.pdf)\n1. Chapter 4: The Synthesis of Sound by Computer; Section 4.7: FM Synthesis. <http://sites.music.columbia.edu/cmc/MusicAndComputers/chapter4/04_07.php>\n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n\nPackage      Version   Citation    \n-----------  --------  ------------\nambient      1.0.2     @ambient    \ngm           2.0.0     @gm         \nmosaicCalc   0.6.4     @mosaicCalc \nplot3D       1.4.1     @plot3D     \n\n\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}