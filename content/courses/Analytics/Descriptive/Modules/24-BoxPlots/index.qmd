---
title: <iconify-icon icon="lucide:group" width="1.2em" height="1.2em"></iconify-icon> Groups 
subtitle: "Plotting Distributions over Categories"
author: "Arvind V."
date: 24/June/2024
date-modified: "`r Sys.Date()`"
abstract: "Quant and Qual Variable Graphs and their Siblings"
order: 24
image: preview.jpg
image-alt: Image by rawpixel.com
df-print: paged
categories:
- Qual Variables
- Quant Variables
- Box Plots
- Violin Plots
bibliography: 
  - references.bib
  - grateful-refs.bib
citation: true
#suppress-bibliography: true
# editor: 
#   markdown: 
#     wrap: 72
webr:
  packages: ['readr', 'tidyr', 'dplyr','mosaic', 'skimr', 'ggformula','ggridges', 'palmerpenguins']

---

## {{< fa folder-open >}} Slides and Tutorials

|                                                                                                 |                                                                                                    |                                                                                        |
|------------------------|------------------------|------------------------|
| <a href="./files/distributions.qmd"><i class="fa-brands fa-r-project"></i> R (Static Viz)</a>   | <a href="./files/distributions.rda"> <i class="fa-solid fa-person-rays"></i> Radiant Tutorial</a>  | <a href="./files/data/qdd-data.zip"> <i class="fa-solid fa-database"></i> Datasets</a> |


:::: {.pa4}
::: {.athelas .ml0 .mt0 .pl4 .black-90 .bl .bw2 .b--blue}
["In keeping silent about evil, in burying it so deep within us that no sign of it appears on the surface, we are implanting it, and it will rise up a thousand fold in the future."]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}

[ --- Aleksandr Solzhenitsyn]{.f6 .ttu .tracked .fs-normal}
:::
::::


## {{< iconify noto-v1 package >}} Setting up R Packages

```{r}
#| label: setup
#| include: true
#| message: false
#| warning: false

library(tidyverse)
library(mosaic)
library(ggformula)
library(skimr)
library(visStatistics) # All in one plot + stats test package
library(palmerpenguins) # Our new favourite dataset
##
library(tidyplots) # Easily Produced Publication-Ready Plots
library(tinyplot) # Plots with Base R
library(tinytable) # Elegant Tables for our data

```


```{r}
#| label: Extra Pedagogical Packages
#| echo: false
#| message: false

library(checkdown)
library(epoxy)
library(grateful)
library(MKdescr)
library(sn) # Normally distributed random data generation
library(downloadthis)
#devtools::install_github("mccarthy-m-g/embedr")
library(embedr) # Embed multimedia in HTML files

```

#### Plot Fonts and Theme

```{r}
#| label: plot-theme
#| echo: true
#| code-fold: true
#| messages: false
#| warning: false

library(systemfonts)
library(showtext)
## Clean the slate
systemfonts::clear_local_fonts()
systemfonts::clear_registry()
##
showtext_opts(dpi = 96) #set DPI for showtext
sysfonts::font_add(family = "Alegreya",
  regular = "../../../../../../fonts/Alegreya-Regular.ttf",
  bold = "../../../../../../fonts/Alegreya-Bold.ttf",
  italic = "../../../../../../fonts/Alegreya-Italic.ttf",
  bolditalic = "../../../../../../fonts/Alegreya-BoldItalic.ttf")

sysfonts::font_add(family = "Roboto Condensed", 
  regular = "../../../../../../fonts/RobotoCondensed-Regular.ttf",
  bold = "../../../../../../fonts/RobotoCondensed-Bold.ttf",
  italic = "../../../../../../fonts/RobotoCondensed-Italic.ttf",
  bolditalic = "../../../../../../fonts/RobotoCondensed-BoldItalic.ttf")
showtext_auto(enable = TRUE) #enable showtext
##
theme_custom <- function(){ 
    font <- "Alegreya"   #assign font family up front
    
    theme_classic(base_size = 14, base_family = font) %+replace%    #replace elements we want to change
    
    theme(
      text = element_text(family = font),  #set base font family
      
      #text elements
      plot.title = element_text(                 #title
                   family = font,          #set font family
                   size = 24,                    #set font size
                   face = 'bold',                #bold typeface
                   hjust = 0,                    #left align
                   margin = margin(t = 5, r = 0, b = 5, l = 0)), #margin
      plot.title.position = "plot", 
      
      plot.subtitle = element_text(              #subtitle
                   family = font,          #font family
                   size = 14,                   #font size
                   hjust = 0,                   #left align
                   margin = margin(t = 5, r = 0, b = 10, l = 0)), #margin
      
      plot.caption = element_text(               #caption
                   family = font,          #font family
                   size = 9,                     #font size
                   hjust = 1),                   #right align
      
      plot.caption.position = "plot",            #right align
      
      axis.title = element_text(                 #axis titles
                   family = "Roboto Condensed",  #font family
                   size = 12),                   #font size
      
      axis.text = element_text(                  #axis text
                   family = "Roboto Condensed",  #font family
                   size = 9),                    #font size
      
      axis.text.x = element_text(                #margin for axis text
                    margin = margin(5, b = 10))
      
      #since the legend often requires manual tweaking 
      #based on plot content, don't define it here
    )
}

```

```{r}
#| cache: false
#| echo: fenced
#| code-fold: true
## Set the theme
theme_set(new = theme_custom())

## Use available fonts in ggplot text geoms too!
update_geom_defaults(geom = "text",new = list(
  family = "Roboto Condensed",
  face = "plain",
  size = 3.5,
  color = "#2b2b2b"
)
)


```




## {{< iconify fxemoji japanesesymbolforbeginner >}} What graphs will we see today?

| Variable #1 | Variable #2 | Chart Names |                    Chart Shape    | 
|:-------------:|:--------------:|:------------------:|:--------------------:|:------:|
|    Quant    |    Qual   | Box Plot | {{< iconify carbon box-plot size=4x >}} |

## {{< iconify tabler variable >}} What kind of Data Variables will we choose?

::: column-page-inset-right
```{r}
#| message: false
#| echo: false
#| warning: false
read_csv("../../../../../materials/Data/pronouns.csv") %>% 
  filter(No == "1" | No == "4") %>% 
  tt(theme = "striped")
  
```


## {{< iconify icons8 idea >}} Inspiration

![Box Plot Inspiration](what-we-mean-when-we-say.jpeg){#fig-boxplot-inspiration height="400px"}

[Alice said, "I say what I mean and I mean what I say!"](https://www.reddit.com/r/EnglishLearning/comments/1abf1dg/comment/kjn85an/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) Are the rest of us so sure? What do we mean when we use any of the phrases above? How definite are we? There is a range of "sureness" and "unsureness"...and this is where we can use box plots like @fig-boxplot-inspiration to show that range of opinion.

Maybe it is time for a box plot on uh, shades[^2] of meaning for ~~Jane Austen~~ Gen-Z phrases! Bah.

## {{< iconify mdi food-processor-outline >}} How do these Chart(s) Work?

Box Plots are an extremely useful data visualization that gives us an idea of the distribution of a Quant variable, for each *level* of another Qual variable. 

```{r}
#| label: fig-boxplot-diagram
#| fig-cap: Box Plot Illustration
#| echo: false

theme_set(theme_custom())

set.seed(123)
data <- rt(150, df = 10)
MKdescr::illustrate.boxplot(data) 

```

The internal process of this plot is as follows:

(Hat tip to student [Tanya Michelle Justin](https://www.linkedin.com/in/tanya-michelle-justin-9692bb306/) for a good question on outlier calculation)

  - Make groups of the Quant variable for each level of the Qual
  - In each group, **rank** the Quant variable **values** in increasing order
  - Calculate: 
    - **Quartiles**: The **values** for `median = Q2`, Q1, and Q3 based on **rank**!!
    - **Values** for `min`, `max`,  and then `IQR = Q1 - Q3`
    - Calculate `outlier` limits: 
      - $[Q1 - 1.5*IQR, Q2 + 1.5*IQR]$
    - `Whiskers`: All **values** within $[Q1 - 1.5*IQR, Q2 + 1.5*IQR]$
    - `Outliers`: All **values** outside of $[Q1 - 1.5*IQR, Q2 + 1.5*IQR]$
  - Plot these as a vertical or horizontal box structure, as shown.
  
As a result of this, while the box-part of the boxplot always shows 2 full quartiles, the whiskers may not stretch through their quartiles, since some **values** may be outliers on either side. 

::: callout-note
### Ranks and Values
The Quant variable is *ordered* based on the **values** from min to max. So you could imagine that each **value** has a **rank** or sequence number. The `min` value has $rank = 1$ and the `max` value has $rank = length(var)$.

:::

::: callout-note
### Histograms and Box Plots
Note how the histogram that dwells upon the `mean` and `standard deviation`, whereas the boxplot focuses on the `median` and `quartiles`.
The former uses the *values* of the Quant variable, whereas the latter uses their *sequence number* or *ranks*. 
:::

Box plots are often used for example in HR operations to understand Salary distributions across grades of employees. Marks of students in competitive exams are also declared using Quartiles. 

Box plots can show skew in distributions, with a large number of outliers on one side, as in @fig-distributions-boxplots.


```{r}
#| label: fig-distributions-boxplots
#| echo: false
#| warning: false
#| fig-cap:
#| - "Skewed Distributions and Boxplots"

rand_data <- tibble(
#left  = rsn(n=5000, xi=0, omega=1, alpha=-8, tau=0, dp=NULL), 
left_skew = rbeta(5000,3,1) * 10,
#right = rsn(n=5000, xi=0, omega=1, alpha=8, tau=0, dp=NULL),
right_skew = rbeta(5000,1,3) * 10,
#center = rsn(n=5000, xi=0, omega=1, alpha=0, tau=0, dp=NULL),
center = rbeta(5000, 1.5, 1.5) * 10) %>% 
  pivot_longer(cols = everything(), 
               names_to = "type", values_to = "value")
rand_data %>% 
  gf_dhistogram(~ value, fill = ~ type, alpha = 0.3) %>% 
  gf_boxplot(0.3 ~ value, fill = ~ type, alpha = 0.3, width = 0.05) %>%
  gf_vline(data = rand_data %>% 
              dplyr::group_by(type) %>% 
              dplyr::summarise(mean = mean(value)), inherit = F,
           xintercept = ~ mean, linetype = "dashed", color = "black") %>%
  gf_labs(title = "Distributions of Random Data",
          subtitle = "Left, Right, and Symmetric Skewed Distributions", caption = "Dotted Line = Mean") %>%
  gf_facet_wrap(~ type, ncol = 3) %>% 
  gf_theme(theme(plot.title.position = "plot",
           legend.position = "none"))

```

In other cases, there may be no ouliers, but the "bottom" and the "lid" of the box may not be the same size!

::: {#fig-three-boxplots layout-ncol=2}

![Box Plot and Skewness](../../../../../materials/images/Boxplots_with_skewness.png){#fig-three-boxplots}


![Density and Skewness](../../../../../materials/images/Relationship_between_mean_and_median_under_different_skewness.png){#fig-distribution-skewness}

Box Plot Discussions

:::

In the @fig-three-boxplots, we see the difference between boxplots that show *symmetric* and *skewed* distributions. The "lid" and the "bottom" of the box are not of similar width in distributions with significant skewness. 

Compare these with the corresponding @fig-distribution-skewness.

:::

## {{< iconify grommet-icons test >}} Case Study-1: `gss_wages` dataset

We will first look at Wage data from the General Social Survey (1974-2018) conducted in the USA, which is used to illustrate wage discrepancies by gender (while also considering respondent occupation, age, and education). This is available on [Vincent Arel-Bundock's superb repository of datasets](https://vincentarelbundock.github.io/Rdatasets/articles/data.html). Let us read into R *directly from the website*. 

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

### {{< iconify la r-project >}} R

```{r}
#| label: read_gss_wage_data
#| message: false
wages <- read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/stevedata/gss_wages.csv")

```

The data has automatically been read into the `webr` session, so you can continue on to the next code chunk!


```{webr-r}
#| context: setup
# Read the data
wages <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/stevedata/gss_wages.csv")

```
:::


### {{< iconify file-icons influxdata >}} Examine the Data

As per our Workflow, we will look at the data using all the three
methods we have seen.

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

#### {{< iconify la r-project >}} dplyr
```{r}
#| label: glimpse-wages
glimpse(wages)

```

#### {{< iconify la r-project >}} skimr
```{r}
#| label: skim-wages
skim(wages)

```

#### {{< iconify la r-project >}} mosaic
```{r}
#| label: inspect-wages
inspect(wages)
```

#### {{< iconify noto-v1 spider-web >}} web-r

```{webr-r}
#| label: glimpse-wages-webr
glimpse(wages)

```

```{webr-r}
#| label: skim-wages-webr
skim(wages)

```

```{webr-r}
#| label: inspect-wages-webr
skim(wages)

```

:::

### {{< iconify streamline dictionary-language-book-solid >}} Data Dictionary

From the [dataset documentation page](https://vincentarelbundock.github.io/Rdatasets/doc/stevedata/gss_wages.html), we note that this is a large dataset (61K rows), with 11 variables:\

::: callout-note
### Quantitative Data

  - `year`(dbl): the survey year
  - `realrinc`(dbl): the respondent's base income (in constant 1986 USD
  - `age`(dbl): the respondent's age in years
  - `occ10`(dbl): respondent's occupation code (2010)
  - `prestg10`(dbl): respondent's occupational prestige score (2010)
  - `childs`(dbl): number of children (0-8)

:::

::: callout-note
### Qualitative Data

  - `occrecode`(chr): recode of the occupation code into one of 11 main categories\
  - `wrkstat`(chr): the work status of the respondent (full-time, part-time, temporarily not working, unemployed (laid off), retired, school, housekeeper, other). 8 levels.\ 
  - `gender`(chr): respondent's gender (male or female). 2 levels.\
  - `educcat`(chr): respondent's degree level (Less Than High School, High School, Junior College, Bachelor, or Graduate). 5 levels.\
  - `maritalcat`(chr): respondent's marital status (Married, Widowed, Divorced, Separated, Never Married). 5 levels.\
  
:::



::: callout-note
### Business Insights based on `wages` dataset
- Fair amount of missing data; however with 61K rows, we can for the present simply neglect the missing data. 
- Good mix of Qual and Quant variables
:::


### {{< iconify  material-symbols lab-research >}} Hypothesis and Research Questions
- The *target variable* for an experiment that resulted in this data might be the `realinc` variable, the resultant income of the individual. Which is numerical variable. 

::: callout-note
### Research Questions:
  - What is the basic distribution of `realrinc`?
  - Is `realrinc` affected by `gender`? 
  - By `educcat`? By `maritalcat`?
  - Is `realrinc` affected by `child`? 
  - Do combinations of these factors have an effect on the target variable?
  
These should do for now! But we should make more questions when have seen some plots!

:::

### {{< iconify carbon clean >}} Data Munging
 Since there are so many missing data in the target variable `realinc` *and* there is still enough data leftover, let us remove the rows containing missing data in that variable. 
 
::: callout-important
NOTE: This is not advised at all as a general procedure!! Data is valuable and there are better ways to manage this problem!
:::

```{r}
#| label: data-cleanup

wages_clean <- 
  wages %>% 
  tidyr::drop_na(realrinc) # choose column or leave blank to choose all

```

```{webr-r}
wages_clean <-  wages %>% tidyr::drop_na(realinc)
```


## {{< iconify carbon box-plot >}} Plotting Box Plots

::: {.column-page-inset-right}

### {{< iconify el question-sign >}} Question-1: What is the basic distribution of `realrinc`?

::: callout-note
### Question-1: What is the basic distribution of `realrinc`?

::: {.panel-tabset .nav-pills style="background: whitesmoke; "}

### Using ggformula
:::: {.columns}
::: {.column}
```{r}
#| label: realincome-ggformula
#| eval: false

wages_clean %>% 
  gf_boxplot(realrinc ~ "Income") %>% # Dummy X-axis "variable"
  gf_labs(title = "Plot 1A: Income has a skewed distribution",
          subtitle = "Many outliers on the high side")
```
:::
::: {.column}
```{r}
#| ref-label: realincome-ggformula
#| echo: false
```

:::
::::

### Using ggplot
```{r}
#| label: realincome-ggplot

wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(y = realrinc, x = "Income")) +  # Dummy X-axis "variable"
  labs(title = "Plot 1A: Income has a skewed distribution",
          subtitle = "Many outliers on the high side")
```

### {{< iconify noto-v1 spider-web >}} web-r
```{webr-r}

wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(realrinc ~ "Income") %>% # Dummy X-axis "variable"
  gf_labs(title = "Plot 1A: Income has a skewed distribution",
          subtitle = "Many outliers on the high side")
##
wages %>% 
  tidyr::drop_na(realrinc) %>%  
  ggplot() + 
  geom_boxplot(aes(y = realrinc, x = "Income")) +  # Dummy X-axis "variable"
  labs(title = "Plot 1A: Income has a skewed distribution",
          subtitle = "Many outliers on the high side")

```



:::
### Business Insights-1
- Income is a very skewed distribution, as might be expected. 
- Presence of many higher-side outliers is noted. 

:::



### {{< iconify el question-sign >}} Question-2: Is `realrinc` affected by `gender`? 
::: callout-note
### Question-2: Is `realrinc` affected by `gender`? 

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}
### Using ggformula
:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-gender-ggformula-1
#| eval: false

wages_clean %>% 
  gf_boxplot(gender ~ realrinc) %>% 
  gf_labs(title = "Plot 2A: Income by Gender")
```
:::
::: {.column}

```{r}
#| ref-label: fig-income-by-gender-ggformula-1
#| echo: false
#| fig-subcap: 
#|   - "Split by Gender"
```
:::
::::


:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-gender-ggformula-2
#| eval: false

wages_clean %>% 
  gf_boxplot(gender ~ log10(realrinc)) %>% 
  gf_labs(title = "Plot 2B: Log(Income) by Gender")
```
:::
::: {.column}

```{r}
#| ref-label: fig-income-by-gender-ggformula-2
#| echo: false
#| fig-subcap: 
#|   - "With log income"
```
:::
::::


:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-gender-ggformula-3
#| eval: false

wages_clean %>% 
  gf_boxplot(gender ~ realrinc, fill = ~ gender) %>% 
  gf_refine(scale_x_log10(), scale_fill_brewer(palette = "Set1")) %>% 
  gf_labs(title = "Plot 2C: Income filled by Gender, log scale")

```
:::
::: {.column}

```{r}
#| ref-label: fig-income-by-gender-ggformula-3
#| echo: false
#| fig-subcap: 
#|   - "With log scale"
```
:::
::::

### Using ggplot
```{r}
#| label: fig-income-by-gender-ggplot
#| layout-ncol: 3
#| fig-cap: "Income by Gender"
#| fig-subcap: 
#|   - "Split by Gender"
#|   - "With log income"
#|   - "With log scale"

wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(y = gender, x = realrinc)) +
  labs(title = "Plot 2A: Income by Gender")
##
wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(y = gender, x = log10(realrinc))) + 
  labs(title = "Plot 2B: Log(Income) by Gender")
##
wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(y = gender, x = realrinc, fill = gender)) +
  scale_x_log10() + scale_fill_brewer(palette = "Set1") + 
  labs(title = "Plot 2C: Income filled by Gender, log scale")

```


### web-r

```{webr-r}

# ggplot2::theme_set(new = theme_classic(base_family = "Roboto Condensed")) # Set consistent graph theme

wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(gender ~ realrinc) %>% 
  gf_labs(title = "Plot 2A: Income by Gender")
##
wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(gender ~ log10(realrinc)) %>% 
  gf_labs(title = "Plot 2B: Log(Income) by Gender")
##
wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(gender ~ realrinc, fill = ~ gender) %>% 
  gf_refine(scale_x_log10(), scale_fill_brewer(palette = "Set1")) %>% 
  gf_labs(title = "Plot 2C: Income filled by Gender, log scale")

```

:::

### Business Insights-2
- Even when split by `gender`, `realincome` presents a skewed set of distributions.
- The IQR for `male`s is smaller than the IQR for `female`s. There is less variation in the middle ranges of `realrinc` for men. 
- log10 transformation helps to view and understand the regions of low `realrinc`. 
- There are outliers on both sides, indicating that there may be many people who make very small amounts of money and large amounts of money in both `gender`s. 

:::

### {{< iconify el question-sign >}} Question-3: Is `realrinc` affected by `educcat`? 
::: callout-note
### Question-3: Is `realrinc` affected by `educcat`? 

::: {.panel-tabset .nav-pills style="background: whitesmoke; "}

### Using ggformula
:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-educcat-ggformula-1
#| eval: false

# ggplot2::theme_set(new = theme_classic(base_family = "Roboto Condensed")) # Set consistent graph theme

wages_clean %>% 
  gf_boxplot(educcat ~ realrinc) %>% 
  gf_labs(title = "Plot 3A: Income by Education Category")

```
:::
::: {.column}
```{r}
#| ref-label: fig-income-by-educcat-ggformula-1
#| echo: false
#| fig-subcap: 
#|   - "Split by Education Category"
```

:::
::::

:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-educcat-ggformula-2
#| eval: false

# ggplot2::theme_set(new = theme_classic(base_family = "Roboto Condensed")) # Set consistent graph theme

wages_clean %>% 
  gf_boxplot(educcat ~ log10(realrinc)) %>% 
  gf_labs(title = "Plot 3B: Log(Income) by Education Category")

```
:::
::: {.column}
```{r}
#| ref-label: fig-income-by-educcat-ggformula-2
#| echo: false
#| fig-subcap: 
#|   - "With log income"
```
:::

::::

:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-educcat-ggformula-3
#| eval: false

wages_clean %>% 
  gf_boxplot(
    reorder(educcat, realrinc, FUN = median) ~ log(realrinc), 
            fill = ~ educcat,
            alpha = 0.5) %>% 
  gf_labs(title = "Plot 3C: Log(Income) by Education Category, sorted",
          x = "Log Income", 
          y = "Education Category") %>%
  gf_refine(scale_fill_brewer(palette = "Set1"))

```
:::
::: {.column}
```{r}
#| ref-label: fig-income-by-educcat-ggformula-3
#| echo: false
#| fig-subcap: 
#|   - "With log income"
```
:::
::::

:::: {.columns}
::: {.column}
```{r}
#| label: fig-income-by-educcat-ggformula-4
#| eval: false

# ggplot2::theme_set(new = theme_classic(base_family = "Roboto Condensed")) # Set consistent graph theme

wages_clean %>% 
  gf_boxplot(reorder(educcat, realrinc, FUN = median) ~ realrinc, 
             fill = ~ educcat,
             alpha = 0.5) %>% 
  gf_refine(scale_x_log10()) %>% 
  gf_labs(title = "Plot 3D: Income by Education Category, sorted",
          subtitle = "Log Income",
          x = "Income", 
          y = "Education Category") %>%
  gf_refine(scale_fill_brewer(palette = "Set1"))

```

:::
::: {.column}
```{r}
#| ref-label: fig-income-by-educcat-ggformula-4
#| echo: false
#| fig-subcap: 
#|   - "Log Income Scale"
```
:::
::::

### Using ggplot

```{r}
#| label: fig-income-by-educcat-ggplot
#| layout-ncol: 2
#| layout-nrow: 2
#| fig-cap: "Income by Education Category"
#| fig-subcap: 
#|   - "Split by Education Category"
#|   - "With log income"
#|   - "With log scale"

wages_clean %>% 
  ggplot() +
  geom_boxplot(aes(realrinc, educcat)) + # (x,y) format
  labs(title = "Plot 3A: Income by Education Category")
##
wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(log10(realrinc), educcat)) + 
  labs(title = "Plot 3B: Log(Income) by Education Category")
##
wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(log(realrinc), 
                   reorder(educcat, realrinc, FUN = median), 
                   fill = educcat),
               alpha = 0.5) + 
  labs(title = "Plot 3C: Log(Income) by Education Category, sorted",
       x = "Log Income", y = "Education Category")
##
wages_clean %>% 
  ggplot() + 
  geom_boxplot(aes(realrinc, 
                   reorder(educcat, realrinc, FUN = median), 
                   fill = educcat),
               alpha = 0.5)+ 
  scale_x_log10() + 
  labs(title = "Plot 3D: Income by Education Category, sorted",
       subtitle = "Log Income Scale",
       x = "Income", y = "Education Category")

```

### web-r

```{webr-r}

# ggplot2::theme_set(new = theme_classic(base_family = "Roboto Condensed")) # Set consistent graph theme

wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(educcat ~ realrinc) %>% 
  gf_labs(title = "Plot 3A: Income by Education Category")
##
wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(educcat ~ log10(realrinc)) %>% 
  gf_labs(title = "Plot 3B: Log(Income) by Education Category")
##
wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(reorder(educcat, realrinc, FUN = median) ~ log(realrinc), 
             fill = ~ educcat,
             alpha = 0.5) %>% 
  gf_labs(title = "Plot 3C: Log(Income) by Education Category, sorted",
          x = "Log Income", y = "Education Category")
##
wages %>% 
  tidyr::drop_na(realrinc) %>% 
  gf_boxplot(reorder(educcat, realrinc, FUN = median) ~ realrinc, 
             fill = ~ educcat,
             alpha = 0.5) %>% 
  gf_refine(scale_x_log10()) %>% 
  gf_labs(title = "Plot 3D: Income by Education Category, sorted",
          subtitle = "Log Income Scale",
          x = "Income", y = "Education Category")

```

:::
### Business Insights-3

- `realrinc` rises with `educcat`, which is to be expected.
- However, there are people with *very low* and *very high* income in all categories of `educcat`
- Hence `educcat` *alone* may not be a good predictor for `realrinc`. 
:::

We can do similar work with the other Qual variables. Let us now see how we can use more than one Qual variable and answer the last hypothesis, Question 4.

### {{< iconify el question-sign >}} Question-4: Is the target variable `realrinc` affected by combinations of Qual factors `gender`, `educcat`, `maritalcat` and `childs`?
::: callout-important 
This is a rather complex question and could take us deep into [Modelling](https://r4ds.had.co.nz/model-building.html). Ideally we ought to:

- take each Qual variable, explain its effect on the target variable\
- **remove that effect** and model the remainder ( i.e. *residual*) with the next Qual variable\
- Proceed in this way until we have a good model.\
if we are going to do this manually. 

There are more modern [Modelling Workflows](workflows), that can do things much faster and without such manual tweaking. 
:::

So will simply plot box plots showing effects on the target variable of *combinations* of Qual variables taken two at a time. (We will of course use facetted box plots!)

We will also drop NA values all around this time, to avoid seeing boxplots for undocumented categories.

::: callout-note
### Question-4: Is `realrinc` affected by combinations of factors?


::: {.panel-tabset .nav-pills style="background: whitesmoke; "}

### Using ggformula
:::: {.columns}
:::{.column}
```{r}
#| label: fig-income-by-educcat-childs-ggformula-1
#| eval: false

wages %>% 
  drop_na() %>% 
  gf_boxplot(reorder(educcat, realrinc) ~ log10(realrinc),
             fill = ~ educcat, 
             alpha = 0.5) %>% 
  gf_facet_wrap(vars(childs)) %>% 
  gf_refine(scale_fill_brewer(type = "qual", palette = "Dark2")) %>% 
  gf_labs(title = "Plot 4A: Log Income by Education Category and Family Size", 
  x = "Log income", 
  y = "No. of Children")

```
:::
::: {.column}
```{r}
#| ref-label: fig-income-by-educcat-childs-ggformula-1
#| echo: false
#| label: fig-income-by-educcat-childs-ggformula-1
#| fig-subcap: 
#|   - "Split by Education Category and Family Size"
```
:::
::::


:::: {.columns}
:::{.column}
```{r}
#| label: fig-income-by-educcat-childs-ggformula-2
#| eval: false

# ggplot2::theme_set(new = theme_classic(base_family = "Roboto Condensed")) # Set consistent graph theme

wages %>% 
  drop_na() %>% 
  mutate(childs = as_factor(childs)) %>% 
  gf_boxplot(childs ~ log10(realrinc),
             group = ~ childs,
             fill = ~ childs, 
             alpha = 0.5) %>% 
  gf_facet_wrap(~ gender) %>% 
  gf_refine(scale_fill_brewer(type = "qual", palette = "Set3")) %>% 
  gf_labs(title = "Plot 4B: Log Income by Gender and Family Size",
          x = "Log income",
          y = "No. of Children")

```
:::

::: {.column}
```{r}
#| ref-label: fig-income-by-educcat-childs-ggformula-2
#| echo: false
#| label: fig-income-by-educcat-childs-ggformula-2
#| fig-subcap: 
#|   - "Split by Gender and Family Size"
```
:::
::::

### Using ggplot
```{r}
#| label: fig-income-by-educcat-childs-ggplot
#| layout-ncol: 2
#| fig-cap: "Income and Other Qual Variables"
#| fig-subcap: 
#|   - "Split by Education Category and Family Size"
#|   - "Split by Gender and Family Size"

wages %>% 
  drop_na() %>%
  ggplot() + 
  geom_boxplot(aes(log10(realrinc), reorder(educcat, realrinc),
                   fill = educcat), # aes() closes here
               alpha = 0.5) + 
  facet_wrap(vars(childs)) +
  scale_fill_brewer(type = "qual", palette = "Dark2") + 
  labs(title = "Plot 4A: Log Income by Education Category and Family Size", x = "Log income", y = "No. of Children")
##
wages %>% 
  drop_na() %>% 
  mutate(childs = as_factor(childs)) %>% 
  ggplot() + 
  geom_boxplot(aes(log10(realrinc),childs,
                 group = childs,
                 fill = childs), # aes() closes here
             alpha = 0.5) +
  facet_wrap(vars(gender)) +
  scale_fill_brewer(type = "qual", palette = "Set3") + 
  labs(title = "Plot 4B: Log Income by Gender and Family Size",
          x = "Log income",
          y = "No. of Children")

```

### web-r

```{webr-r}
#| label: fig-income-by-educcat-childs-webr

wages %>% 
  drop_na() %>% 
  gf_boxplot(reorder(educcat, realrinc) ~ log10(realrinc),
             fill = ~ educcat, 
             alpha = 0.5) %>% 
  gf_facet_wrap(vars(childs)) %>% 
  gf_refine(scale_fill_brewer(type = "qual", palette = "Dark2")) %>% 
  gf_labs(title = "Plot 4A: Log Income by Education Category and Family Size", x = "Log income", y = "No. of Children")
##
wages %>% 
  drop_na() %>% 
  mutate(childs = as_factor(childs)) %>% 
  gf_boxplot(childs ~ log10(realrinc),
             group = ~ childs,
             fill = ~ childs, 
             alpha = 0.5) %>% 
  gf_facet_wrap(~ gender) %>% 
  gf_refine(scale_fill_brewer(type = "qual", palette = "Set3")) %>% 
  gf_labs(title = "Plot 4B: Log Income by Gender and Family Size",
          x = "Log income",
          y = "No. of Children")

```

:::

### Business Insights-4
- From @fig-income-by-educcat-childs-ggformula-1, we see that `realrinc` increases with `educcat`, across (almost) all family sizes `childs`. 
- However, this trend breaks a little when family sizes `childs` is large, say >= 7. Be aware that the data observations for such large families may be sparse and this inference may not be necessarily valid.
- From @fig-income-by-educcat-childs-ggformula-2, we see that the effect of `childs` on `realrinc` is different for each `gender`! For *females*, the income steadily drops with the number of children, whereas for *males* it actually increases up to a certain family size before decreasing again. 
:::

:::


## {{< iconify ic outline-gpp-good>}} Are the Differences Significant?

::: callout-important
### Hunches and Hypotheses
In data analysis, we always want to know[^1], as in life, how important things are, whether they **matter**. To do this, we make up hunches, or more precisely, *Hypotheses*. We make two in fact: 

$H_0$: *Nothing is happening*;\
$H_a$: ("a" for Alternate): *Something is happening and it is important enough to pay attention to*. 

We then [***pretend*** that $H_0$ is true](https://youtu.be/ciS5GikZ5Jo){style="background: yellow;"} and ask that our data prove us wrong; if it does, *we reject $H_0$ in favour of $H_a$*. 

This is a very important idea of *Hypothesis Testing* which helps you justify your hunch. We will study this when we do Stats Tests for [differences between two means(t-tests)](../../../Inference/Modules/110-TwoMeans/index.qmd), and [those between more than two means(ANOVA)](../../../Inference/Modules/130-ThreeMeansOrMore/index.qmd). 

:::


## {{< iconify mingcute thought-line >}} Wait, But Why?

- Box plots are a  powerful statistical graphic that give us a combined view of data ranges, quartiles, medians, and outliers. 
- Box plots can [compare `groups` within our Quant variable, based on `levels` of a Qual variable]{style="background: yellow;"}. This is a very common and important task in research! 
- In your design research, you would have numerical Quant data that is accompanied by categorical Qual data pertaining to groups within your target audience. 
- Analyzing for **differences** in the Quant across levels of the Qual (e.g household expenditure across groups of people) is a vital step in justifying time, effort, and money for further actions in your project. [Don't faff this.](https://dictionary.cambridge.org/dictionary/english/faff) 
- Box plots are ideal for visualizing statistical tests for difference in *mean* values across groups (t-test and ANOVA). (Even though they plot *medians*)


## {{< iconify fluent-mdl2 decision-solid >}} Conclusion

-   Box Plots "dwell upon" **medians** and **Quartiles**
-   Box Plots can show distributions of a Quant variable over *levels* of a Qual variable
- This allows a comparison of box plots side by side to visibly detect differences in medians and IQRs across such levels.


## {{< iconify bi person-up >}} Your Turn

Here are a couple of datasets that you might want to analyze with box plots:

::: callout-note
### Insurance Data

{{< downloadthis data/insurance.csv dname="insurance" label="Download the Insurance data" icon="database-fill-down" type="info" >}}

:::

::: callout-note

### Political Donations 

{{< downloadthis data/donations.csv dname="donations" label="Download the Donations data" icon="database-fill-down" type="info" >}}

:::
::: callout-note

### UFO Encounters 

```{r}
#| echo: false
ufo_sightings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv")

ufo_sightings %>% download_this(output_name = "UFO", output_extension = ".csv", button_label = "UFO Sighting data", button_type = "default", icon = "fa fa-save")
```

The data dictionary for this dataset is here at the [TidyTuesday Website.](https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-06-25). The TidyTuesday Website is a treasure trove of interesting datasets!

:::
::: callout-note

### GPT-based Language detectors are biased against non-native English writers.

```{r}
#| echo: false
detectors <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-18/detectors.csv")

detectors %>% download_this(output_name = "AI_Dectectors", output_extension = ".csv", button_label = "AI Dectector data", button_type = "default", icon = "fa fa-save")

```


What story can you tell, and deduction can you make from @fig-ai-detectors-are-biased below? How would you [replicate it](../28-Violins/index.qmd)? What would you add?

![AI Detectors](../../../../../materials/images/ai-bias.png){#fig-ai-detectors-are-biased height="400px"}
:::


## {{< iconify eos-icons ai >}} AI Generated Summary and Podcast

This excerpt from "Groups – Applied Metaphors: Learning TRIZ, Complexity, Data/Stats/ML using Metaphors" provides a comprehensive guide to understanding and utilizing box plots for data visualization and analysis. The text explores the purpose, functionality, and application of box plots within the context of exploring relationships between quantitative and qualitative variables. The author illustrates these concepts using a case study of the "gss_wages" dataset, examining wage discrepancies by gender, occupation, age, and education. Through this analysis, the author highlights the effectiveness of box plots in visualizing distributions, identifying outliers, and comparing groups, providing valuable insights into the complexities of data. The text concludes with a call to action, encouraging readers to explore real-world datasets and apply these techniques to uncover hidden trends and patterns within data.

- What are the relationships between qualitative and quantitative variables in the gss_wages dataset?

- How do box plots help visualize and understand the distribution of income across different groups?

- What insights can be gained by analyzing the impact of multiple qualitative factors on income distribution?

<center>
```{r}
#| echo: false
embedr::embed_audio("../../../../../materials/audio/Groups.wav")
``` 
</center>


## {{< iconify ooui references-rtl >}} References

1. Winston Chang (2024). *R Graphics Cookbook*. <https://r-graphics.org>
1. Bevans, R. (2023, June 22). *An Introduction to t Tests | Definitions, Formula and Examples*. Scribbr. <https://www.scribbr.com/statistics/t-test/>
1. Brown, Angus. (2008). *The Strange Origins of the t-test*. Physiology News | No. 71 | Summer 2008| <https://static.physoc.org/app/uploads/2019/03/22194755/71-a.pdf>
1. Stephen T. Ziliak.(2008). *Guinnessometrics: The Economic
Foundation of “Student’s” t*. Journal of Economic Perspectives—Volume 22, Number 4—Fall 2008—Pages 199–216. <https://pubs.aeaweb.org/doi/pdfplus/10.1257/jep.22.4.199>
1. <https://quillette.com/2024/08/03/xy-athletes-in-womens-olympic-boxing-paris-2024-controversy-explained-khelif-yu-ting/>
1. Senefeld JW, Lambelet Coleman D, Johnson PW, Carter RE, Clayburn AJ, Joyner MJ. *Divergence in Timing and Magnitude of Testosterone Levels Between Male and Female Youths*. JAMA. 2020;324(1):99–101. doi:10.1001/jama.2020.5655. <https://jamanetwork.com/journals/jama/fullarticle/2767852>
1. Doriane Lambelet Coleman.(2017) *Sex in Sport, 80 Law and Contemporary Problems*. Available at: <https://scholarship.law.duke.edu/lcp/vol80/iss4/5>
1. Distributome - An Interactive Web-based Resource for Probability Distributions <https://distributome.org>

[^1]:“Ah, Misha, he has a stormy spirit. His mind is in bondage. He is haunted by a great, unsolved doubt. He is one of those who don't want millions, but an answer to their questions.”
― Fyodor Dostoevsky, The Brothers Karamazov: A Novel in Four Parts With Epilogue

[^2]: The term *throwing a shade* can be found in Jane Austen's novel Mansfield Park (1814). Young Edmund Bertram is displeased with a dinner guest's disparagement of the uncle who took her in: "With such warm feelings and lively spirits it must be difficult to do justice to her affection for Mrs. Crawford, without throwing a shade on the Admiral."


::: {#refs style="font-size: 60%;"}
###### {{< iconify lucide package-check >}} R Package Citations

```{r}
#| echo: false
#scan_packages()
cite_packages(
  output = "table",
  out.dir = ".",
  out.format = "html",
  pkgs = c("ggridges", "NHANES", "TeachHist",
           "TeachingDemos", "visualize", "visStatistics", "tidyplots", "tinyplot", "tinytable", "sn")
) %>%
  knitr::kable(format = "simple")

```
:::

