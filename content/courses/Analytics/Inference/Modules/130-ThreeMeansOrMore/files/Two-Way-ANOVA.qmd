---
title: "Different Types of ANOVA"
date: 27/Dec/2023
date-modified: "`r Sys.Date()`"
draft: true
bibliography: 
  - grateful-refs.bib
citation: true
editor: 
  markdown: 
    wrap: 72
---

## {{< iconify noto-v1 package >}} Setting up R Packages

```{r}
#| label: setup
#| message: false
#| warning: false
#| echo: true
knitr::opts_chunk$set(tidy = TRUE)

library(ggformula) # Formula based plots
library(mosaic) # Data inspection and Statistical Inference 
library(broom) # Tidy outputs from Statistical Analyses
library(infer) # Statistical Inference
library(supernova) # ANOVA Tables

library(multcomp)
library(marginaleffects)
library(gplots)

# Plots
library(ggprism)
library(cowplot) # Arranging Plots
library(patchwork) # Arranging Plots
library(plotly) # 3D plots, should we need them

library(tidyverse) # Tidy data processing 

```

```{r}
#| label: Extra Pedagogical Packages
#| echo: false
#| message: false

library(checkdown)
library(epoxy)
library(TeachHist)
library(TeachingDemos)
library(grateful)

```


#### Plot Fonts and Theme

```{r}
#| label: plot-theme
#| echo: fenced
#| code-fold: true
#| messages: false
#| warning: false

library(sysfonts)
library(showtext)
font_add(family = "Alegreya", regular = "../../../../gfonts/fonts/Alegreya/Alegreya-Regular.ttf")
font_add(family = "Roboto Condensed", regular = "../../../../gfonts/fonts/RobotoCondensed-Regular.ttf")
showtext_auto(enable = TRUE) #enable showtext
##
theme_custom <- function(){ 
    font <- "Alegreya"   #assign font family up front
    
    theme_classic(base_size = 14) %+replace%    #replace elements we want to change
    
    theme(
      text = element_text(family = font),  #set base font family
      
      #text elements
      plot.title = element_text(                 #title
                   family = "Alegreya",          #set font family
                   size = 18,                    #set font size
                   face = 'bold',                #bold typeface
                   hjust = 0,                    #left align
                   margin = margin(t = 5, r = 0, b = 5, l = 0)), #margin
      plot.title.position = "plot", 
      
      plot.subtitle = element_text(              #subtitle
                   family = "Alegreya",          #font family
                   size = 14,                   #font size
                   hjust = 0,                   #left align
                   margin = margin(t = 5, r = 0, b = 10, l = 0)), #margin
      
      plot.caption = element_text(               #caption
                   family = "Alegreya",          #font family
                   size = 9,                     #font size
                   hjust = 1),                   #right align
      
      plot.caption.position = "plot",            #right align
      
      axis.title = element_text(                 #axis titles
                   family = "Roboto Condensed",  #font family
                   size = 12),                   #font size
      
      axis.text = element_text(                  #axis text
                   family = "Roboto Condensed",  #font family
                   size = 9),                    #font size
      
      axis.text.x = element_text(                #margin for axis text
                    margin = margin(5, b = 10))
      
      #since the legend often requires manual tweaking 
      #based on plot content, don't define it here
    )
}

```


```{r}
#| cache: false
#| code-fold: true
## Use available fonts in ggplot text geoms too!
update_geom_defaults(geom = "text",new = list(
  family = "Roboto Condensed",
  face = "plain",
  size = 3.5,
  color = "#2b2b2b"
)
)

## Set the theme
theme_set(new = theme_custom())

```




## {{< iconify openmoji japanese-symbol-for-beginner >}} Introduction

What we have seen up to now is an ANOVA model where we had a single
Quantitative target variable, and one Qualitative independent variable,
what we call "one-way ANOVA".

In **two-way ANOVA**, subjects are randomly assigned to groups formed by
the cross-combination of *two factors*, and differences (in means) are
calculated *between groups*. If the *same subjects* are used to perform
observations over levels of the Qualitative independent variable, we
have **repeated measures ANOVA**, where differences are calculated
*within groups*. Models with both between-groups and within-groups
factors are called *mixed models*.

Sometimes there is an additional independent **Quantitative** variable
(a "covariate") that varies across the groups of the **Qualitative**
variable, which leads to an **Analysis of Covariance (ANCOVA)** model.
With **multiple ANOVA (MANOVA)**, we are trying to deal with more than
one **target** Quantitative variable. And if we again have a
Quantitative covariate, then we perform a MANCOVA analysis.

## {{< iconify pajamas issue-type-test-case >}} Two-Way Factorial ANOVA: ToothGrowth

Sixty guinea pigs are randomly assigned to receive one of three levels
of *ascorbic acid* (0.5, 1, or 2 mg) via one of two delivery
methods(orange juice or vitamin C); this gives us 6 *cells* of
observations.

Here we have two factors (dose and delivery method), and each cell of
observations is separate. Hence this is a **between groups two-way ANOVA**. Since each cell has the same number of observations, the design is also **balanced**.

```{r}
ToothGrowth
ToothGrowth <- ToothGrowth %>% 
  mutate(dose = as_factor(dose))

plot_ly(ToothGrowth, x = ~supp, y = ~dose, z = ~len, color = ~supp, colors = c('#BF382A', '#0C4B8E')) %>% 
  add_markers()
```

```{r}
ToothGrowth %>% 
  group_by(supp, dose) %>% 
  summarise(mean = mean(len), sd = sd(len), n = n())

```

There seem to be large differences in the *means* across the 6
*balanced* groupings / cells. We can quickly see this as a heatmap:

```{r}
ToothGrowth %>% 
  mutate(dose = as_factor(dose)) %>% # supp is already a factor
  group_by(supp, dose) %>% 
  summarise(mean = mean(len), sd = sd(len), n = n(),
            .groups = "drop") %>% 
  dplyr::select(supp, dose, mean, sd) %>%
  #
  gf_tile(supp ~ dose, fill =  ~ mean, # try changing "mean" to "sd"
          color = "black",data = .) %>% 
  gf_text(label = ~ mean, color = "white", size = 6) %>% 
  #
  gf_refine(scale_fill_viridis_c()) %>%
  gf_labs(title = "Mean Tooth Length across Factor Combinations") %>% 
  gf_refine(scale_x_discrete(guide = "prism_bracket"),
            scale_y_discrete(guide = "prism_bracket")) %>% 
  gf_theme(ggprism::theme_prism())

```


Let us build the two-way model:

```{r}
#| label: Two-Way-ANOVA
tg_anova <- aov(len ~ supp*dose, data = ToothGrowth)
tg_anova %>% broom::tidy() # Type I Table!!
summary(tg_anova) # Type I Table
```

```{r}
#| results: hold
tg_anova %>% supernova::supernova() # Type III Table!!
#tg_anova %>% supernova::supernova(type = "I") # Try this


```

There are significant main effects for both `supp` and `dose`, as also a significant interaction effect for `supp:dose`.

::: callout-note
### Types of ANOVA Analyses and Tables

Note how `supernova()` renders a Type III ANOVA table by default. Both
`broom::tidy()` and `summary()` render Type I tables.

From *R in Action* by Robert Kabacoff:

Consider an unbalanced two-way factorial design with factors A and B and
dependent variable y. There are three effects in this design: the A and
B main effects and the A × B interaction. Assuming that you’re modeling
the data using the formula $Y\sim A + B + A:B$ there are three typical
approaches for partitioning the variance in Y among the effects on the
right side of this equation.

-   **Type I (sequential)** Effects are adjusted for those that appear
    earlier in the formula. A is unadjusted. B is adjusted for the A,
    i.e. the effect of B is calculated after removing that of A.
    The A:B interaction is adjusted for A and B.

-   **Type II (hierarchical)** Effects are adjusted for other effects at
    the same or lower level. A is adjusted for B. B is adjusted for A.
    The A:B interaction is adjusted for both A and B.

-   **Type III (marginal)** Each effect is adjusted for every other
    effect in the model. A is adjusted for B and A:B. B is adjusted for
    A and A:B. The A:B interaction is adjusted for A and B.

[***R employs the Type I approach by default.***]{.black .bg-gold}
    
:::

### Effect Sizes
::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

#### Using base R

As before, we use `summary.lm()` to get an idea of the effect sizes 
for each of the predictors and their interactions:

```{r}
tg_anova_tidy <- tg_anova %>% 
  summary.lm() %>% 
  broom::tidy()
tg_anova_tidy

## Plotting
tg_anova_tidy %>%
  gf_col(
    estimate ~ term,
    fill = "grey",
    color = "black",
    title = "Tooth Growth Two-Way ANOVA\nEffect Sizes"
  ) %>%
  gf_errorbar((estimate + std.error) + (estimate - std.error) ~ term, 
              width = 0.25) %>%
  gf_text(estimate*1.05 ~ term, hjust = 1.1,label = ~ round(estimate,2),
          size = 3) %>% 
  gf_hline(yintercept = 0,
           linewidth = 2,
           colour = "grey40") %>% 
  gf_refine(scale_x_discrete(guide = "prism_bracket")) %>%
  gf_theme(ggprism::theme_prism(base_size = 10))

```

As before, the `(Intercept)` term is to be interpreted as the effect 
size for the **two factors** being set to their *first* levels 
alphabetically. So `supp = OJ` and `dose = 0.5 mg`. All the estimates 
are **differences** from this number, and hence the `std.error` is 
higher. `dose1` and `dose2` are *main effects*. For interaction terms, 
since *two* factors are involved, the `std.error` is higher still. 

We see that the effect size for `VC:dose1` is not significant since the confidence interval straddles $0$. (p > 0.05)

#### Using ggeffects
```{r}
#| label: Using-ggeffects

tg_effects <- 
  tg_anova %>% ggeffects::ggeffect(terms = c("dose", "supp"), 
                                   ci_level = 0.95) %>% as_tibble()
tg_effects
## Plot with ggformula
tg_effects %>% 
  gf_errorbar(conf.low + conf.high ~ x, 
              colour = ~ group, 
              group = ~ group,
              width = 0.25) %>% 
  gf_line(predicted ~ x) %>% 
  gf_point(predicted ~ x, xlab = "dosage in mm", 
           ylab = "Predicted Tooth Length", 
           title = "Using ggeffects") %>% 
  gf_refine(scale_x_discrete(guide = "prism_bracket")) %>%
  gf_theme(ggprism::theme_prism())

```

#### Using marginaleffects
```{r}
#| label: Using-marginaleffects

tg_marg_effects <-
  marginaleffects::avg_comparisons(tg_anova,
                                   variables = c("dose", "supp"))
tg_marg_effects

marginaleffects::plot_predictions(tg_anova, by = c("dose", "supp")) +
  scale_x_discrete(guide = "prism_bracket") +
  theme_prism()

```

:::

We can finally do a Japanese-lantern-like 3-D interactive plot with the predicted means and confidence intervals (not yet):


```{r}
tg_effects
##
plot_ly(ToothGrowth, x = ~supp, y = ~dose, z = ~len, color = ~supp, 
        colors = c('#BF382A', '#0C4B8E')) %>% 
  add_markers() %>% 
    add_markers(data = tg_effects , x = ~ x, y = ~ group, 
        z = ~ predicted, color = ~ group,
        colors = c('#BF382A', '#0C4B8E'))
```

There is a significant effect on tooth growth (`len`) of the delivery
methods: clearly the orange juice method promotes longer tooth growth 
at all values of `dose`. However, at $dose = 2mg$ the effect size for
orange juice and vitamin C are the same.

### {{< iconify pajamas issue-type-test-case >}} Repeated Measures 
ANOVA: CO2

In this situation, we have two factors: one *within-groups* due to
repeated measures on the **same population**, and another factor the
decides one or more levels of treatment. We will use the `CO2` data set 
from base R.

```{r}
CO2
CO2 <- CO2 %>% 
  mutate(Type = as_factor(Type),
         Treatment = as_factor(Treatment),
         conc = as_factor(conc))
```

This data is in *long form* with repeated entries for the same `Plant` 
ID, where the measurements of dependent variable `uptake` are repeated 
for 7 levels of `conc`. Hence `Treatment` is the *between groups* factor
and `conc` is the *within groups* factor.

We can develop a model for repeated measures as follows:

```{r}
plant_anova <- aov(uptake ~ Type*conc*Treatment + Error(Plant/conc), 
                   data = CO2)

plant_anova %>% broom::tidy()
```

### {{< iconify pajamas issue-type-test-case >}} ANCOVA: Mouse Litter 
weights

Analysis of Co-variance extends one-way ANOVA to include one or more
Quantitative *covariates*.

```{r}
data(litter, package = "multcomp")
litter
litter %>% group_by(dose) %>% count()
```

Here, `weight` is the target variable, with `dose` being the Qualitative
predictor, and `gesttime` the Quantitative covariate. The experiment is
also unbalanced, with differences in the number of observations assigned
to each `dose`.

```{r}
litter_anova <- aov(weight ~ dose*gesttime, data = litter)
summary(litter_anova)
```

```{r}
ggeffects::ggeffect(litter_anova,ci.lvl = 0.95)
```

So the effect of `gesttime` is significant, but not so `dose` and and
their interaction term...

Because of the covariate `gesttime`, the means of `weight` are
influenced by both and we can calculate the means, after *adjusting* for
the covariate `gesttime`. We can use the `effects` package to do this:

```{r}
#| warning: false
# library(effects)
litter %>% 
  group_by(dose) %>% 
  summarise(original_mean = mean(weight))
##
fitted_means <- effects::effect(term = "dose", mod = litter_anova) %>% as_tibble()
fitted_means
## Can we plot these for a better view?

gf_summary(weight ~ dose,
           colour = ~"Original Means",
           fun.y = "mean", geom = "point", 
           group = ~ dose, size = 4,
           data = litter) %>% 
  gf_errorbar(data = fitted_means, 
      # a formula with shape ymin + ymax ~ x 
      lower + upper ~ dose, inherit = FALSE, width = 0.25) %>% 
  gf_point(fit ~ dose, 
            size = 4, colour = ~ "Adjusted Means",
           data = fitted_means) %>% 
  gf_refine(scale_x_discrete(guide = "prism_bracket")) %>% 
  gf_theme(ggprism::theme_prism())

```

Not too different, so the covariate `gesttime` does not affect the
`weight` too much...however, we should verify that the `gesttime`
variable has the *same regression slope* across levels of `dose`. This
can be done with the `HH` package:

```{r}
library(HH)
HH::ancova(weight ~ gesttime*dose, data = litter)

p1 <- litter %>% 
  group_by(dose) %>% 
  gf_point(weight ~ gesttime, color = ~ dose) %>% 
  gf_lm() %>% 
  gf_facet_wrap(vars(dose), ncol = 4) %>% 
  gf_theme(theme_bw()) %>%  
  gf_refine(theme(axis.text.x = element_text(size = 5)))
  
p2 <- litter %>% 
  group_by(dose) %>% 
  gf_point(weight ~ gesttime, color = ~ dose) %>% 
  gf_lm() %>% 
  gf_theme(theme_bw()) %>%  
  gf_refine(theme(axis.text.x = element_text(size = 5)))

p1 + p2 +
  plot_layout(widths = c(2, 1),guides = "collect")

```

The regression slopes for `weight ~ gesttime` are reasonably close for
all `dose` values, except, $0$. So one hypothesis that we can check, is
whether there is a significant difference in `weight` between *no-drug*
and *drug* regimes. We can do this with the `multcomp` package, after
specifying the hypthesis in the form of a *contrast*:

```{r}
# library(multcomp)

```

### {{< iconify pajamas issue-type-test-case >}} MANCOVA: US Cereals

Sometimes we have more than on Quantitative variable that we want to
deal with. In this case we have multiple-ANOVAs, or MANOVA.

In our next Case Study, we will try to model if there is a difference in
the nutritional content of cereals stored/displayed on different shelves
in a supermarket.

MANOVA can be used in certain conditions:

-   The dependent variables should be normally distribute within groups.
    The R function mshapiro.test( )\[in the `mvnormtest` package\] can
    be used to perform the Shapiro-Wilk test for multivariate normality.
    This is useful in the case of MANOVA, which assumes multivariate
    normality.

-   Homogeneity of variances across the range of predictors.

-   Linearity between all pairs of dependent variables, all pairs of
    covariates, and all dependent variable-covariate pairs in each cell.

```{r}
data("UScereal", package = "MASS")
UScereal
```

Our dependent variables are `calories`, `fat`, and `sugars`. Let us look
at means and standard deviations of the target variables vs the
independent variables:

```{r}
#| warning: false
#| message: false
UScereal %>% 
  dplyr::select(calories, fat, sugars, shelf) %>% 
  dplyr::mutate(shelf = as_factor(shelf)) %>% 
  dplyr::group_by(shelf) %>%
  summarise(across(everything(), list(mean = mean, sd = sd))) %>% 
  dplyr::select(shelf, contains("mean"), everything()) 


UScereal_long <- UScereal %>% 
  dplyr::select(calories, fat, sugars, shelf) %>% 
  dplyr::mutate(shelf = as_factor(shelf)) %>% 
  pivot_longer(-shelf, names_to = "params", values_to = "values")
UScereal_long
##
gf_summary(values ~ shelf,
           colour = ~ params,
           fun = "mean", geom = "line",
           group = ~ params, size = 1,title = "Means", 
           caption = "Y scales are not the same!!",
           data = UScereal_long) %>% 
  gf_summary(fun = "mean", geom = "point", size = 4) %>% 
  gf_facet_wrap(vars(params), scale = "free_y") %>% 
  gf_theme(theme_bw)

##
gf_summary(values ~ shelf,
           colour = ~ params,
           fun = "sd", geom = "point",
           group = ~ params, size = 2,title = "Standard Deviations", 
           caption = "Y scales are not the same!!",
           data = UScereal_long) %>% 
  gf_summary(fun = "sd", geom = "line", size = 1) %>% 
  gf_facet_wrap(vars(params), scale = "free_y") %>% 
  gf_theme(theme_bw)

```

There seem to be large differences in means and standard deviations,
across types of content and across shelves.

```{r}
# Bind the dependent variables together
dep_vars <- cbind(UScereal$calories, UScereal$sugars, UScereal$fat)

# MANOVA
fit3 <- manova(dep_vars ~ shelf, data = UScereal)
summary.manova(fit3)
summary.manova(fit3,
        test = c("Wilks"), # Wilks test is "popular in literature"
        intercept = FALSE, tol = 1e-7)
```

So it seems that the `shelf` variable does have an effect on the amount
of `calories`, `sugars` and `fats` in the cereals displayed. But on
which ones?

We can look at the individual responses using "univariate ANOVA"
summaries:

```{r}
summary.aov(fit3)
```

So the three `shelf`-ves differ substantially in each nutritional
measure.

## {{< iconify ooui references-rtl >}} References {#sec-references}

::: {#refs style="font-size: 60%;"}
\
Add references here 1. Types of ANOVA\
2. General Linear Hypothesis Testing\

###### {{< iconify lucide package-check >}} R Package Citations

```{r}
#| echo: false
#scan_packages()
cite_packages(
  output = "table",
  out.dir = ".",
  out.format = "html",
  pkgs = c("effects", "multcomp", "ggeffects")
) %>%
  knitr::kable(format = "simple")

```
:::
